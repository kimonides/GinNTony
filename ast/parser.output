Grammar

    0 $accept: program $end

    1 program: func_def

    2 func_def: "def" header ':' definition_list stmt_list "end"

    3 func_decl: "decl" header

    4 definition_list: %empty
    5                | definition_list func_def
    6                | definition_list func_decl
    7                | definition_list var_def

    8 stmt_list: stmt
    9          | stmt_list stmt

   10 header: T_var '(' formal_list ')'
   11       | type T_var '(' formal_list ')'

   12 formal_list: %empty
   13            | formal_head formal

   14 formal_head: %empty
   15            | formal_head formal ';'

   16 formal: type var_list
   17       | "ref" type var_list

   18 var_list: T_var
   19         | var_list ',' T_var

   20 type: "int"
   21     | "bool"
   22     | "char"
   23     | type '[' ']'
   24     | "list" '[' type ']'

   25 var_def: type var_list

   26 stmt: simple
   27     | "exit"
   28     | "return" expr
   29     | "if" expr ':' stmt_list elsif_list "end"
   30     | "for" simple_list ';' expr ';' simple_list ':' stmt_list "end"

   31 elsif_list: else
   32           | "elsif" expr ':' stmt_list elsif_list

   33 else: %empty
   34     | "else" ':' stmt_list

   35 simple: "skip"
   36       | atom ":=" expr
   37       | call

   38 simple_list: simple
   39            | simple_list ',' simple

   40 call: T_var '(' expr_list ')'

   41 expr_list: %empty
   42          | expr_head expr

   43 expr_head: %empty
   44          | expr_head expr ','

   45 atom: T_var
   46     | T_constString
   47     | atom '[' expr ']'
   48     | call

   49 expr: atom
   50     | T_constInt
   51     | T_constChar
   52     | '(' expr ')'
   53     | '+' expr
   54     | '-' expr
   55     | expr '+' expr
   56     | expr '-' expr
   57     | expr '*' expr
   58     | expr '/' expr
   59     | expr "mod" expr
   60     | expr '=' expr
   61     | expr '>' expr
   62     | expr '<' expr
   63     | expr "<>" expr
   64     | expr "<=" expr
   65     | expr ">=" expr
   66     | "true"
   67     | "false"
   68     | "not" expr
   69     | expr "and" expr
   70     | expr "or" expr
   71     | "new" type '[' expr ']'
   72     | "nil"
   73     | "nil?" '(' expr ')'
   74     | expr '#' expr
   75     | "head" '(' expr ')'
   76     | "tail" '(' expr ')'


Terminals, with rules where they appear

$end (0) 0
'#' (35) 74
'(' (40) 10 11 40 52 73 75 76
')' (41) 10 11 40 52 73 75 76
'*' (42) 57
'+' (43) 53 55
',' (44) 19 39 44
'-' (45) 54 56
'/' (47) 58
':' (58) 2 29 30 32 34
';' (59) 15 30
'<' (60) 62
'=' (61) 60
'>' (62) 61
'[' (91) 23 24 47 71
']' (93) 23 24 47 71
error (256)
"and" (258) 69
"end" (259) 2 29 30
"list" (260) 24
"ref" (261) 17
"bool" (262) 21
"exit" (263) 27
"mod" (264) 59
"return" (265) 28
"char" (266) 22
"false" (267) 67
"true" (268) 66
"new" (269) 71
"skip" (270) 35
"decl" (271) 3
"for" (272) 30
"nil" (273) 72
"tail" (274) 76
"head" (275) 75
"def" (276) 2
"nil?" (277) 73
"if" (278) 29
"else" (279) 34
"elsif" (280) 32
"not" (281) 68
"int" (282) 20
"or" (283) 70
":=" (284) 36
">=" (285) 65
"<=" (286) 64
"<>" (287) 63
T_constInt (288) 50
T_var (289) 10 11 18 19 40 45
T_constChar (290) 51
T_constString (291) 46
UPLUS (292)
UMINUS (293)


Nonterminals, with rules where they appear

$accept (54)
    on left: 0
program (55)
    on left: 1, on right: 0
func_def (56)
    on left: 2, on right: 1 5
func_decl (57)
    on left: 3, on right: 6
definition_list (58)
    on left: 4 5 6 7, on right: 2 5 6 7
stmt_list (59)
    on left: 8 9, on right: 2 9 29 30 32 34
header (60)
    on left: 10 11, on right: 2 3
formal_list (61)
    on left: 12 13, on right: 10 11
formal_head (62)
    on left: 14 15, on right: 13 15
formal (63)
    on left: 16 17, on right: 13 15
var_list (64)
    on left: 18 19, on right: 16 17 19 25
type (65)
    on left: 20 21 22 23 24, on right: 11 16 17 23 24 25 71
var_def (66)
    on left: 25, on right: 7
stmt (67)
    on left: 26 27 28 29 30, on right: 8 9
elsif_list (68)
    on left: 31 32, on right: 29 32
else (69)
    on left: 33 34, on right: 31
simple (70)
    on left: 35 36 37, on right: 26 38 39
simple_list (71)
    on left: 38 39, on right: 30 39
call (72)
    on left: 40, on right: 37 48
expr_list (73)
    on left: 41 42, on right: 40
expr_head (74)
    on left: 43 44, on right: 42 44
atom (75)
    on left: 45 46 47 48, on right: 36 47 49
expr (76)
    on left: 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66
    67 68 69 70 71 72 73 74 75 76, on right: 28 29 30 32 36 42 44 47
    52 53 54 55 56 57 58 59 60 61 62 63 64 65 68 69 70 71 73 74 75
    76


State 0

    0 $accept: . program $end

    "def"  shift, and go to state 1

    program   go to state 2
    func_def  go to state 3


State 1

    2 func_def: "def" . header ':' definition_list stmt_list "end"

    "list"  shift, and go to state 4
    "bool"  shift, and go to state 5
    "char"  shift, and go to state 6
    "int"   shift, and go to state 7
    T_var   shift, and go to state 8

    header  go to state 9
    type    go to state 10


State 2

    0 $accept: program . $end

    $end  shift, and go to state 11


State 3

    1 program: func_def .

    $default  reduce using rule 1 (program)


State 4

   24 type: "list" . '[' type ']'

    '['  shift, and go to state 12


State 5

   21 type: "bool" .

    $default  reduce using rule 21 (type)


State 6

   22 type: "char" .

    $default  reduce using rule 22 (type)


State 7

   20 type: "int" .

    $default  reduce using rule 20 (type)


State 8

   10 header: T_var . '(' formal_list ')'

    '('  shift, and go to state 13


State 9

    2 func_def: "def" header . ':' definition_list stmt_list "end"

    ':'  shift, and go to state 14


State 10

   11 header: type . T_var '(' formal_list ')'
   23 type: type . '[' ']'

    T_var  shift, and go to state 15
    '['    shift, and go to state 16


State 11

    0 $accept: program $end .

    $default  accept


State 12

   24 type: "list" '[' . type ']'

    "list"  shift, and go to state 4
    "bool"  shift, and go to state 5
    "char"  shift, and go to state 6
    "int"   shift, and go to state 7

    type  go to state 17


State 13

   10 header: T_var '(' . formal_list ')'

    ')'       reduce using rule 12 (formal_list)
    $default  reduce using rule 14 (formal_head)

    formal_list  go to state 18
    formal_head  go to state 19


State 14

    2 func_def: "def" header ':' . definition_list stmt_list "end"

    $default  reduce using rule 4 (definition_list)

    definition_list  go to state 20


State 15

   11 header: type T_var . '(' formal_list ')'

    '('  shift, and go to state 21


State 16

   23 type: type '[' . ']'

    ']'  shift, and go to state 22


State 17

   23 type: type . '[' ']'
   24     | "list" '[' type . ']'

    '['  shift, and go to state 16
    ']'  shift, and go to state 23


State 18

   10 header: T_var '(' formal_list . ')'

    ')'  shift, and go to state 24


State 19

   13 formal_list: formal_head . formal
   15 formal_head: formal_head . formal ';'

    "list"  shift, and go to state 4
    "ref"   shift, and go to state 25
    "bool"  shift, and go to state 5
    "char"  shift, and go to state 6
    "int"   shift, and go to state 7

    formal  go to state 26
    type    go to state 27


State 20

    2 func_def: "def" header ':' definition_list . stmt_list "end"
    5 definition_list: definition_list . func_def
    6                | definition_list . func_decl
    7                | definition_list . var_def

    "list"         shift, and go to state 4
    "bool"         shift, and go to state 5
    "exit"         shift, and go to state 28
    "return"       shift, and go to state 29
    "char"         shift, and go to state 6
    "skip"         shift, and go to state 30
    "decl"         shift, and go to state 31
    "for"          shift, and go to state 32
    "def"          shift, and go to state 1
    "if"           shift, and go to state 33
    "int"          shift, and go to state 7
    T_var          shift, and go to state 34
    T_constString  shift, and go to state 35

    func_def   go to state 36
    func_decl  go to state 37
    stmt_list  go to state 38
    type       go to state 39
    var_def    go to state 40
    stmt       go to state 41
    simple     go to state 42
    call       go to state 43
    atom       go to state 44


State 21

   11 header: type T_var '(' . formal_list ')'

    ')'       reduce using rule 12 (formal_list)
    $default  reduce using rule 14 (formal_head)

    formal_list  go to state 45
    formal_head  go to state 19


State 22

   23 type: type '[' ']' .

    $default  reduce using rule 23 (type)


State 23

   24 type: "list" '[' type ']' .

    $default  reduce using rule 24 (type)


State 24

   10 header: T_var '(' formal_list ')' .

    $default  reduce using rule 10 (header)


State 25

   17 formal: "ref" . type var_list

    "list"  shift, and go to state 4
    "bool"  shift, and go to state 5
    "char"  shift, and go to state 6
    "int"   shift, and go to state 7

    type  go to state 46


State 26

   13 formal_list: formal_head formal .
   15 formal_head: formal_head formal . ';'

    ';'  shift, and go to state 47

    $default  reduce using rule 13 (formal_list)


State 27

   16 formal: type . var_list
   23 type: type . '[' ']'

    T_var  shift, and go to state 48
    '['    shift, and go to state 16

    var_list  go to state 49


State 28

   27 stmt: "exit" .

    $default  reduce using rule 27 (stmt)


State 29

   28 stmt: "return" . expr

    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "new"          shift, and go to state 52
    "nil"          shift, and go to state 53
    "tail"         shift, and go to state 54
    "head"         shift, and go to state 55
    "nil?"         shift, and go to state 56
    "not"          shift, and go to state 57
    T_constInt     shift, and go to state 58
    T_var          shift, and go to state 34
    T_constChar    shift, and go to state 59
    T_constString  shift, and go to state 35
    '+'            shift, and go to state 60
    '-'            shift, and go to state 61
    '('            shift, and go to state 62

    call  go to state 63
    atom  go to state 64
    expr  go to state 65


State 30

   35 simple: "skip" .

    $default  reduce using rule 35 (simple)


State 31

    3 func_decl: "decl" . header

    "list"  shift, and go to state 4
    "bool"  shift, and go to state 5
    "char"  shift, and go to state 6
    "int"   shift, and go to state 7
    T_var   shift, and go to state 8

    header  go to state 66
    type    go to state 10


State 32

   30 stmt: "for" . simple_list ';' expr ';' simple_list ':' stmt_list "end"

    "skip"         shift, and go to state 30
    T_var          shift, and go to state 34
    T_constString  shift, and go to state 35

    simple       go to state 67
    simple_list  go to state 68
    call         go to state 43
    atom         go to state 44


State 33

   29 stmt: "if" . expr ':' stmt_list elsif_list "end"

    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "new"          shift, and go to state 52
    "nil"          shift, and go to state 53
    "tail"         shift, and go to state 54
    "head"         shift, and go to state 55
    "nil?"         shift, and go to state 56
    "not"          shift, and go to state 57
    T_constInt     shift, and go to state 58
    T_var          shift, and go to state 34
    T_constChar    shift, and go to state 59
    T_constString  shift, and go to state 35
    '+'            shift, and go to state 60
    '-'            shift, and go to state 61
    '('            shift, and go to state 62

    call  go to state 63
    atom  go to state 64
    expr  go to state 69


State 34

   40 call: T_var . '(' expr_list ')'
   45 atom: T_var .

    '('  shift, and go to state 70

    $default  reduce using rule 45 (atom)


State 35

   46 atom: T_constString .

    $default  reduce using rule 46 (atom)


State 36

    5 definition_list: definition_list func_def .

    $default  reduce using rule 5 (definition_list)


State 37

    6 definition_list: definition_list func_decl .

    $default  reduce using rule 6 (definition_list)


State 38

    2 func_def: "def" header ':' definition_list stmt_list . "end"
    9 stmt_list: stmt_list . stmt

    "end"          shift, and go to state 71
    "exit"         shift, and go to state 28
    "return"       shift, and go to state 29
    "skip"         shift, and go to state 30
    "for"          shift, and go to state 32
    "if"           shift, and go to state 33
    T_var          shift, and go to state 34
    T_constString  shift, and go to state 35

    stmt    go to state 72
    simple  go to state 42
    call    go to state 43
    atom    go to state 44


State 39

   23 type: type . '[' ']'
   25 var_def: type . var_list

    T_var  shift, and go to state 48
    '['    shift, and go to state 16

    var_list  go to state 73


State 40

    7 definition_list: definition_list var_def .

    $default  reduce using rule 7 (definition_list)


State 41

    8 stmt_list: stmt .

    $default  reduce using rule 8 (stmt_list)


State 42

   26 stmt: simple .

    $default  reduce using rule 26 (stmt)


State 43

   37 simple: call .
   48 atom: call .

    ":="      reduce using rule 48 (atom)
    '['       reduce using rule 48 (atom)
    $default  reduce using rule 37 (simple)


State 44

   36 simple: atom . ":=" expr
   47 atom: atom . '[' expr ']'

    ":="  shift, and go to state 74
    '['   shift, and go to state 75


State 45

   11 header: type T_var '(' formal_list . ')'

    ')'  shift, and go to state 76


State 46

   17 formal: "ref" type . var_list
   23 type: type . '[' ']'

    T_var  shift, and go to state 48
    '['    shift, and go to state 16

    var_list  go to state 77


State 47

   15 formal_head: formal_head formal ';' .

    $default  reduce using rule 15 (formal_head)


State 48

   18 var_list: T_var .

    $default  reduce using rule 18 (var_list)


State 49

   16 formal: type var_list .
   19 var_list: var_list . ',' T_var

    ','  shift, and go to state 78

    $default  reduce using rule 16 (formal)


State 50

   67 expr: "false" .

    $default  reduce using rule 67 (expr)


State 51

   66 expr: "true" .

    $default  reduce using rule 66 (expr)


State 52

   71 expr: "new" . type '[' expr ']'

    "list"  shift, and go to state 4
    "bool"  shift, and go to state 5
    "char"  shift, and go to state 6
    "int"   shift, and go to state 7

    type  go to state 79


State 53

   72 expr: "nil" .

    $default  reduce using rule 72 (expr)


State 54

   76 expr: "tail" . '(' expr ')'

    '('  shift, and go to state 80


State 55

   75 expr: "head" . '(' expr ')'

    '('  shift, and go to state 81


State 56

   73 expr: "nil?" . '(' expr ')'

    '('  shift, and go to state 82


State 57

   68 expr: "not" . expr

    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "new"          shift, and go to state 52
    "nil"          shift, and go to state 53
    "tail"         shift, and go to state 54
    "head"         shift, and go to state 55
    "nil?"         shift, and go to state 56
    "not"          shift, and go to state 57
    T_constInt     shift, and go to state 58
    T_var          shift, and go to state 34
    T_constChar    shift, and go to state 59
    T_constString  shift, and go to state 35
    '+'            shift, and go to state 60
    '-'            shift, and go to state 61
    '('            shift, and go to state 62

    call  go to state 63
    atom  go to state 64
    expr  go to state 83


State 58

   50 expr: T_constInt .

    $default  reduce using rule 50 (expr)


State 59

   51 expr: T_constChar .

    $default  reduce using rule 51 (expr)


State 60

   53 expr: '+' . expr

    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "new"          shift, and go to state 52
    "nil"          shift, and go to state 53
    "tail"         shift, and go to state 54
    "head"         shift, and go to state 55
    "nil?"         shift, and go to state 56
    "not"          shift, and go to state 57
    T_constInt     shift, and go to state 58
    T_var          shift, and go to state 34
    T_constChar    shift, and go to state 59
    T_constString  shift, and go to state 35
    '+'            shift, and go to state 60
    '-'            shift, and go to state 61
    '('            shift, and go to state 62

    call  go to state 63
    atom  go to state 64
    expr  go to state 84


State 61

   54 expr: '-' . expr

    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "new"          shift, and go to state 52
    "nil"          shift, and go to state 53
    "tail"         shift, and go to state 54
    "head"         shift, and go to state 55
    "nil?"         shift, and go to state 56
    "not"          shift, and go to state 57
    T_constInt     shift, and go to state 58
    T_var          shift, and go to state 34
    T_constChar    shift, and go to state 59
    T_constString  shift, and go to state 35
    '+'            shift, and go to state 60
    '-'            shift, and go to state 61
    '('            shift, and go to state 62

    call  go to state 63
    atom  go to state 64
    expr  go to state 85


State 62

   52 expr: '(' . expr ')'

    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "new"          shift, and go to state 52
    "nil"          shift, and go to state 53
    "tail"         shift, and go to state 54
    "head"         shift, and go to state 55
    "nil?"         shift, and go to state 56
    "not"          shift, and go to state 57
    T_constInt     shift, and go to state 58
    T_var          shift, and go to state 34
    T_constChar    shift, and go to state 59
    T_constString  shift, and go to state 35
    '+'            shift, and go to state 60
    '-'            shift, and go to state 61
    '('            shift, and go to state 62

    call  go to state 63
    atom  go to state 64
    expr  go to state 86


State 63

   48 atom: call .

    $default  reduce using rule 48 (atom)


State 64

   47 atom: atom . '[' expr ']'
   49 expr: atom .

    '['  shift, and go to state 75

    $default  reduce using rule 49 (expr)


State 65

   28 stmt: "return" expr .
   55 expr: expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   59     | expr . "mod" expr
   60     | expr . '=' expr
   61     | expr . '>' expr
   62     | expr . '<' expr
   63     | expr . "<>" expr
   64     | expr . "<=" expr
   65     | expr . ">=" expr
   69     | expr . "and" expr
   70     | expr . "or" expr
   74     | expr . '#' expr

    "and"  shift, and go to state 87
    "mod"  shift, and go to state 88
    "or"   shift, and go to state 89
    ">="   shift, and go to state 90
    "<="   shift, and go to state 91
    "<>"   shift, and go to state 92
    '='    shift, and go to state 93
    '>'    shift, and go to state 94
    '<'    shift, and go to state 95
    '#'    shift, and go to state 96
    '+'    shift, and go to state 97
    '-'    shift, and go to state 98
    '*'    shift, and go to state 99
    '/'    shift, and go to state 100

    $default  reduce using rule 28 (stmt)


State 66

    3 func_decl: "decl" header .

    $default  reduce using rule 3 (func_decl)


State 67

   38 simple_list: simple .

    $default  reduce using rule 38 (simple_list)


State 68

   30 stmt: "for" simple_list . ';' expr ';' simple_list ':' stmt_list "end"
   39 simple_list: simple_list . ',' simple

    ';'  shift, and go to state 101
    ','  shift, and go to state 102


State 69

   29 stmt: "if" expr . ':' stmt_list elsif_list "end"
   55 expr: expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   59     | expr . "mod" expr
   60     | expr . '=' expr
   61     | expr . '>' expr
   62     | expr . '<' expr
   63     | expr . "<>" expr
   64     | expr . "<=" expr
   65     | expr . ">=" expr
   69     | expr . "and" expr
   70     | expr . "or" expr
   74     | expr . '#' expr

    "and"  shift, and go to state 87
    "mod"  shift, and go to state 88
    "or"   shift, and go to state 89
    ">="   shift, and go to state 90
    "<="   shift, and go to state 91
    "<>"   shift, and go to state 92
    '='    shift, and go to state 93
    '>'    shift, and go to state 94
    '<'    shift, and go to state 95
    '#'    shift, and go to state 96
    '+'    shift, and go to state 97
    '-'    shift, and go to state 98
    '*'    shift, and go to state 99
    '/'    shift, and go to state 100
    ':'    shift, and go to state 103


State 70

   40 call: T_var '(' . expr_list ')'

    ')'       reduce using rule 41 (expr_list)
    $default  reduce using rule 43 (expr_head)

    expr_list  go to state 104
    expr_head  go to state 105


State 71

    2 func_def: "def" header ':' definition_list stmt_list "end" .

    $default  reduce using rule 2 (func_def)


State 72

    9 stmt_list: stmt_list stmt .

    $default  reduce using rule 9 (stmt_list)


State 73

   19 var_list: var_list . ',' T_var
   25 var_def: type var_list .

    ','  shift, and go to state 78

    $default  reduce using rule 25 (var_def)


State 74

   36 simple: atom ":=" . expr

    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "new"          shift, and go to state 52
    "nil"          shift, and go to state 53
    "tail"         shift, and go to state 54
    "head"         shift, and go to state 55
    "nil?"         shift, and go to state 56
    "not"          shift, and go to state 57
    T_constInt     shift, and go to state 58
    T_var          shift, and go to state 34
    T_constChar    shift, and go to state 59
    T_constString  shift, and go to state 35
    '+'            shift, and go to state 60
    '-'            shift, and go to state 61
    '('            shift, and go to state 62

    call  go to state 63
    atom  go to state 64
    expr  go to state 106


State 75

   47 atom: atom '[' . expr ']'

    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "new"          shift, and go to state 52
    "nil"          shift, and go to state 53
    "tail"         shift, and go to state 54
    "head"         shift, and go to state 55
    "nil?"         shift, and go to state 56
    "not"          shift, and go to state 57
    T_constInt     shift, and go to state 58
    T_var          shift, and go to state 34
    T_constChar    shift, and go to state 59
    T_constString  shift, and go to state 35
    '+'            shift, and go to state 60
    '-'            shift, and go to state 61
    '('            shift, and go to state 62

    call  go to state 63
    atom  go to state 64
    expr  go to state 107


State 76

   11 header: type T_var '(' formal_list ')' .

    $default  reduce using rule 11 (header)


State 77

   17 formal: "ref" type var_list .
   19 var_list: var_list . ',' T_var

    ','  shift, and go to state 78

    $default  reduce using rule 17 (formal)


State 78

   19 var_list: var_list ',' . T_var

    T_var  shift, and go to state 108


State 79

   23 type: type . '[' ']'
   71 expr: "new" type . '[' expr ']'

    '['  shift, and go to state 109


State 80

   76 expr: "tail" '(' . expr ')'

    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "new"          shift, and go to state 52
    "nil"          shift, and go to state 53
    "tail"         shift, and go to state 54
    "head"         shift, and go to state 55
    "nil?"         shift, and go to state 56
    "not"          shift, and go to state 57
    T_constInt     shift, and go to state 58
    T_var          shift, and go to state 34
    T_constChar    shift, and go to state 59
    T_constString  shift, and go to state 35
    '+'            shift, and go to state 60
    '-'            shift, and go to state 61
    '('            shift, and go to state 62

    call  go to state 63
    atom  go to state 64
    expr  go to state 110


State 81

   75 expr: "head" '(' . expr ')'

    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "new"          shift, and go to state 52
    "nil"          shift, and go to state 53
    "tail"         shift, and go to state 54
    "head"         shift, and go to state 55
    "nil?"         shift, and go to state 56
    "not"          shift, and go to state 57
    T_constInt     shift, and go to state 58
    T_var          shift, and go to state 34
    T_constChar    shift, and go to state 59
    T_constString  shift, and go to state 35
    '+'            shift, and go to state 60
    '-'            shift, and go to state 61
    '('            shift, and go to state 62

    call  go to state 63
    atom  go to state 64
    expr  go to state 111


State 82

   73 expr: "nil?" '(' . expr ')'

    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "new"          shift, and go to state 52
    "nil"          shift, and go to state 53
    "tail"         shift, and go to state 54
    "head"         shift, and go to state 55
    "nil?"         shift, and go to state 56
    "not"          shift, and go to state 57
    T_constInt     shift, and go to state 58
    T_var          shift, and go to state 34
    T_constChar    shift, and go to state 59
    T_constString  shift, and go to state 35
    '+'            shift, and go to state 60
    '-'            shift, and go to state 61
    '('            shift, and go to state 62

    call  go to state 63
    atom  go to state 64
    expr  go to state 112


State 83

   55 expr: expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   59     | expr . "mod" expr
   60     | expr . '=' expr
   61     | expr . '>' expr
   62     | expr . '<' expr
   63     | expr . "<>" expr
   64     | expr . "<=" expr
   65     | expr . ">=" expr
   68     | "not" expr .
   69     | expr . "and" expr
   70     | expr . "or" expr
   74     | expr . '#' expr

    "mod"  shift, and go to state 88
    ">="   shift, and go to state 90
    "<="   shift, and go to state 91
    "<>"   shift, and go to state 92
    '='    shift, and go to state 93
    '>'    shift, and go to state 94
    '<'    shift, and go to state 95
    '#'    shift, and go to state 96
    '+'    shift, and go to state 97
    '-'    shift, and go to state 98
    '*'    shift, and go to state 99
    '/'    shift, and go to state 100

    $default  reduce using rule 68 (expr)


State 84

   53 expr: '+' expr .
   55     | expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   59     | expr . "mod" expr
   60     | expr . '=' expr
   61     | expr . '>' expr
   62     | expr . '<' expr
   63     | expr . "<>" expr
   64     | expr . "<=" expr
   65     | expr . ">=" expr
   69     | expr . "and" expr
   70     | expr . "or" expr
   74     | expr . '#' expr

    $default  reduce using rule 53 (expr)


State 85

   54 expr: '-' expr .
   55     | expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   59     | expr . "mod" expr
   60     | expr . '=' expr
   61     | expr . '>' expr
   62     | expr . '<' expr
   63     | expr . "<>" expr
   64     | expr . "<=" expr
   65     | expr . ">=" expr
   69     | expr . "and" expr
   70     | expr . "or" expr
   74     | expr . '#' expr

    $default  reduce using rule 54 (expr)


State 86

   52 expr: '(' expr . ')'
   55     | expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   59     | expr . "mod" expr
   60     | expr . '=' expr
   61     | expr . '>' expr
   62     | expr . '<' expr
   63     | expr . "<>" expr
   64     | expr . "<=" expr
   65     | expr . ">=" expr
   69     | expr . "and" expr
   70     | expr . "or" expr
   74     | expr . '#' expr

    "and"  shift, and go to state 87
    "mod"  shift, and go to state 88
    "or"   shift, and go to state 89
    ">="   shift, and go to state 90
    "<="   shift, and go to state 91
    "<>"   shift, and go to state 92
    '='    shift, and go to state 93
    '>'    shift, and go to state 94
    '<'    shift, and go to state 95
    '#'    shift, and go to state 96
    '+'    shift, and go to state 97
    '-'    shift, and go to state 98
    '*'    shift, and go to state 99
    '/'    shift, and go to state 100
    ')'    shift, and go to state 113


State 87

   69 expr: expr "and" . expr

    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "new"          shift, and go to state 52
    "nil"          shift, and go to state 53
    "tail"         shift, and go to state 54
    "head"         shift, and go to state 55
    "nil?"         shift, and go to state 56
    "not"          shift, and go to state 57
    T_constInt     shift, and go to state 58
    T_var          shift, and go to state 34
    T_constChar    shift, and go to state 59
    T_constString  shift, and go to state 35
    '+'            shift, and go to state 60
    '-'            shift, and go to state 61
    '('            shift, and go to state 62

    call  go to state 63
    atom  go to state 64
    expr  go to state 114


State 88

   59 expr: expr "mod" . expr

    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "new"          shift, and go to state 52
    "nil"          shift, and go to state 53
    "tail"         shift, and go to state 54
    "head"         shift, and go to state 55
    "nil?"         shift, and go to state 56
    "not"          shift, and go to state 57
    T_constInt     shift, and go to state 58
    T_var          shift, and go to state 34
    T_constChar    shift, and go to state 59
    T_constString  shift, and go to state 35
    '+'            shift, and go to state 60
    '-'            shift, and go to state 61
    '('            shift, and go to state 62

    call  go to state 63
    atom  go to state 64
    expr  go to state 115


State 89

   70 expr: expr "or" . expr

    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "new"          shift, and go to state 52
    "nil"          shift, and go to state 53
    "tail"         shift, and go to state 54
    "head"         shift, and go to state 55
    "nil?"         shift, and go to state 56
    "not"          shift, and go to state 57
    T_constInt     shift, and go to state 58
    T_var          shift, and go to state 34
    T_constChar    shift, and go to state 59
    T_constString  shift, and go to state 35
    '+'            shift, and go to state 60
    '-'            shift, and go to state 61
    '('            shift, and go to state 62

    call  go to state 63
    atom  go to state 64
    expr  go to state 116


State 90

   65 expr: expr ">=" . expr

    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "new"          shift, and go to state 52
    "nil"          shift, and go to state 53
    "tail"         shift, and go to state 54
    "head"         shift, and go to state 55
    "nil?"         shift, and go to state 56
    "not"          shift, and go to state 57
    T_constInt     shift, and go to state 58
    T_var          shift, and go to state 34
    T_constChar    shift, and go to state 59
    T_constString  shift, and go to state 35
    '+'            shift, and go to state 60
    '-'            shift, and go to state 61
    '('            shift, and go to state 62

    call  go to state 63
    atom  go to state 64
    expr  go to state 117


State 91

   64 expr: expr "<=" . expr

    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "new"          shift, and go to state 52
    "nil"          shift, and go to state 53
    "tail"         shift, and go to state 54
    "head"         shift, and go to state 55
    "nil?"         shift, and go to state 56
    "not"          shift, and go to state 57
    T_constInt     shift, and go to state 58
    T_var          shift, and go to state 34
    T_constChar    shift, and go to state 59
    T_constString  shift, and go to state 35
    '+'            shift, and go to state 60
    '-'            shift, and go to state 61
    '('            shift, and go to state 62

    call  go to state 63
    atom  go to state 64
    expr  go to state 118


State 92

   63 expr: expr "<>" . expr

    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "new"          shift, and go to state 52
    "nil"          shift, and go to state 53
    "tail"         shift, and go to state 54
    "head"         shift, and go to state 55
    "nil?"         shift, and go to state 56
    "not"          shift, and go to state 57
    T_constInt     shift, and go to state 58
    T_var          shift, and go to state 34
    T_constChar    shift, and go to state 59
    T_constString  shift, and go to state 35
    '+'            shift, and go to state 60
    '-'            shift, and go to state 61
    '('            shift, and go to state 62

    call  go to state 63
    atom  go to state 64
    expr  go to state 119


State 93

   60 expr: expr '=' . expr

    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "new"          shift, and go to state 52
    "nil"          shift, and go to state 53
    "tail"         shift, and go to state 54
    "head"         shift, and go to state 55
    "nil?"         shift, and go to state 56
    "not"          shift, and go to state 57
    T_constInt     shift, and go to state 58
    T_var          shift, and go to state 34
    T_constChar    shift, and go to state 59
    T_constString  shift, and go to state 35
    '+'            shift, and go to state 60
    '-'            shift, and go to state 61
    '('            shift, and go to state 62

    call  go to state 63
    atom  go to state 64
    expr  go to state 120


State 94

   61 expr: expr '>' . expr

    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "new"          shift, and go to state 52
    "nil"          shift, and go to state 53
    "tail"         shift, and go to state 54
    "head"         shift, and go to state 55
    "nil?"         shift, and go to state 56
    "not"          shift, and go to state 57
    T_constInt     shift, and go to state 58
    T_var          shift, and go to state 34
    T_constChar    shift, and go to state 59
    T_constString  shift, and go to state 35
    '+'            shift, and go to state 60
    '-'            shift, and go to state 61
    '('            shift, and go to state 62

    call  go to state 63
    atom  go to state 64
    expr  go to state 121


State 95

   62 expr: expr '<' . expr

    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "new"          shift, and go to state 52
    "nil"          shift, and go to state 53
    "tail"         shift, and go to state 54
    "head"         shift, and go to state 55
    "nil?"         shift, and go to state 56
    "not"          shift, and go to state 57
    T_constInt     shift, and go to state 58
    T_var          shift, and go to state 34
    T_constChar    shift, and go to state 59
    T_constString  shift, and go to state 35
    '+'            shift, and go to state 60
    '-'            shift, and go to state 61
    '('            shift, and go to state 62

    call  go to state 63
    atom  go to state 64
    expr  go to state 122


State 96

   74 expr: expr '#' . expr

    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "new"          shift, and go to state 52
    "nil"          shift, and go to state 53
    "tail"         shift, and go to state 54
    "head"         shift, and go to state 55
    "nil?"         shift, and go to state 56
    "not"          shift, and go to state 57
    T_constInt     shift, and go to state 58
    T_var          shift, and go to state 34
    T_constChar    shift, and go to state 59
    T_constString  shift, and go to state 35
    '+'            shift, and go to state 60
    '-'            shift, and go to state 61
    '('            shift, and go to state 62

    call  go to state 63
    atom  go to state 64
    expr  go to state 123


State 97

   55 expr: expr '+' . expr

    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "new"          shift, and go to state 52
    "nil"          shift, and go to state 53
    "tail"         shift, and go to state 54
    "head"         shift, and go to state 55
    "nil?"         shift, and go to state 56
    "not"          shift, and go to state 57
    T_constInt     shift, and go to state 58
    T_var          shift, and go to state 34
    T_constChar    shift, and go to state 59
    T_constString  shift, and go to state 35
    '+'            shift, and go to state 60
    '-'            shift, and go to state 61
    '('            shift, and go to state 62

    call  go to state 63
    atom  go to state 64
    expr  go to state 124


State 98

   56 expr: expr '-' . expr

    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "new"          shift, and go to state 52
    "nil"          shift, and go to state 53
    "tail"         shift, and go to state 54
    "head"         shift, and go to state 55
    "nil?"         shift, and go to state 56
    "not"          shift, and go to state 57
    T_constInt     shift, and go to state 58
    T_var          shift, and go to state 34
    T_constChar    shift, and go to state 59
    T_constString  shift, and go to state 35
    '+'            shift, and go to state 60
    '-'            shift, and go to state 61
    '('            shift, and go to state 62

    call  go to state 63
    atom  go to state 64
    expr  go to state 125


State 99

   57 expr: expr '*' . expr

    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "new"          shift, and go to state 52
    "nil"          shift, and go to state 53
    "tail"         shift, and go to state 54
    "head"         shift, and go to state 55
    "nil?"         shift, and go to state 56
    "not"          shift, and go to state 57
    T_constInt     shift, and go to state 58
    T_var          shift, and go to state 34
    T_constChar    shift, and go to state 59
    T_constString  shift, and go to state 35
    '+'            shift, and go to state 60
    '-'            shift, and go to state 61
    '('            shift, and go to state 62

    call  go to state 63
    atom  go to state 64
    expr  go to state 126


State 100

   58 expr: expr '/' . expr

    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "new"          shift, and go to state 52
    "nil"          shift, and go to state 53
    "tail"         shift, and go to state 54
    "head"         shift, and go to state 55
    "nil?"         shift, and go to state 56
    "not"          shift, and go to state 57
    T_constInt     shift, and go to state 58
    T_var          shift, and go to state 34
    T_constChar    shift, and go to state 59
    T_constString  shift, and go to state 35
    '+'            shift, and go to state 60
    '-'            shift, and go to state 61
    '('            shift, and go to state 62

    call  go to state 63
    atom  go to state 64
    expr  go to state 127


State 101

   30 stmt: "for" simple_list ';' . expr ';' simple_list ':' stmt_list "end"

    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "new"          shift, and go to state 52
    "nil"          shift, and go to state 53
    "tail"         shift, and go to state 54
    "head"         shift, and go to state 55
    "nil?"         shift, and go to state 56
    "not"          shift, and go to state 57
    T_constInt     shift, and go to state 58
    T_var          shift, and go to state 34
    T_constChar    shift, and go to state 59
    T_constString  shift, and go to state 35
    '+'            shift, and go to state 60
    '-'            shift, and go to state 61
    '('            shift, and go to state 62

    call  go to state 63
    atom  go to state 64
    expr  go to state 128


State 102

   39 simple_list: simple_list ',' . simple

    "skip"         shift, and go to state 30
    T_var          shift, and go to state 34
    T_constString  shift, and go to state 35

    simple  go to state 129
    call    go to state 43
    atom    go to state 44


State 103

   29 stmt: "if" expr ':' . stmt_list elsif_list "end"

    "exit"         shift, and go to state 28
    "return"       shift, and go to state 29
    "skip"         shift, and go to state 30
    "for"          shift, and go to state 32
    "if"           shift, and go to state 33
    T_var          shift, and go to state 34
    T_constString  shift, and go to state 35

    stmt_list  go to state 130
    stmt       go to state 41
    simple     go to state 42
    call       go to state 43
    atom       go to state 44


State 104

   40 call: T_var '(' expr_list . ')'

    ')'  shift, and go to state 131


State 105

   42 expr_list: expr_head . expr
   44 expr_head: expr_head . expr ','

    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "new"          shift, and go to state 52
    "nil"          shift, and go to state 53
    "tail"         shift, and go to state 54
    "head"         shift, and go to state 55
    "nil?"         shift, and go to state 56
    "not"          shift, and go to state 57
    T_constInt     shift, and go to state 58
    T_var          shift, and go to state 34
    T_constChar    shift, and go to state 59
    T_constString  shift, and go to state 35
    '+'            shift, and go to state 60
    '-'            shift, and go to state 61
    '('            shift, and go to state 62

    call  go to state 63
    atom  go to state 64
    expr  go to state 132


State 106

   36 simple: atom ":=" expr .
   55 expr: expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   59     | expr . "mod" expr
   60     | expr . '=' expr
   61     | expr . '>' expr
   62     | expr . '<' expr
   63     | expr . "<>" expr
   64     | expr . "<=" expr
   65     | expr . ">=" expr
   69     | expr . "and" expr
   70     | expr . "or" expr
   74     | expr . '#' expr

    "and"  shift, and go to state 87
    "mod"  shift, and go to state 88
    "or"   shift, and go to state 89
    ">="   shift, and go to state 90
    "<="   shift, and go to state 91
    "<>"   shift, and go to state 92
    '='    shift, and go to state 93
    '>'    shift, and go to state 94
    '<'    shift, and go to state 95
    '#'    shift, and go to state 96
    '+'    shift, and go to state 97
    '-'    shift, and go to state 98
    '*'    shift, and go to state 99
    '/'    shift, and go to state 100

    $default  reduce using rule 36 (simple)


State 107

   47 atom: atom '[' expr . ']'
   55 expr: expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   59     | expr . "mod" expr
   60     | expr . '=' expr
   61     | expr . '>' expr
   62     | expr . '<' expr
   63     | expr . "<>" expr
   64     | expr . "<=" expr
   65     | expr . ">=" expr
   69     | expr . "and" expr
   70     | expr . "or" expr
   74     | expr . '#' expr

    "and"  shift, and go to state 87
    "mod"  shift, and go to state 88
    "or"   shift, and go to state 89
    ">="   shift, and go to state 90
    "<="   shift, and go to state 91
    "<>"   shift, and go to state 92
    '='    shift, and go to state 93
    '>'    shift, and go to state 94
    '<'    shift, and go to state 95
    '#'    shift, and go to state 96
    '+'    shift, and go to state 97
    '-'    shift, and go to state 98
    '*'    shift, and go to state 99
    '/'    shift, and go to state 100
    ']'    shift, and go to state 133


State 108

   19 var_list: var_list ',' T_var .

    $default  reduce using rule 19 (var_list)


State 109

   23 type: type '[' . ']'
   71 expr: "new" type '[' . expr ']'

    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "new"          shift, and go to state 52
    "nil"          shift, and go to state 53
    "tail"         shift, and go to state 54
    "head"         shift, and go to state 55
    "nil?"         shift, and go to state 56
    "not"          shift, and go to state 57
    T_constInt     shift, and go to state 58
    T_var          shift, and go to state 34
    T_constChar    shift, and go to state 59
    T_constString  shift, and go to state 35
    '+'            shift, and go to state 60
    '-'            shift, and go to state 61
    '('            shift, and go to state 62
    ']'            shift, and go to state 22

    call  go to state 63
    atom  go to state 64
    expr  go to state 134


State 110

   55 expr: expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   59     | expr . "mod" expr
   60     | expr . '=' expr
   61     | expr . '>' expr
   62     | expr . '<' expr
   63     | expr . "<>" expr
   64     | expr . "<=" expr
   65     | expr . ">=" expr
   69     | expr . "and" expr
   70     | expr . "or" expr
   74     | expr . '#' expr
   76     | "tail" '(' expr . ')'

    "and"  shift, and go to state 87
    "mod"  shift, and go to state 88
    "or"   shift, and go to state 89
    ">="   shift, and go to state 90
    "<="   shift, and go to state 91
    "<>"   shift, and go to state 92
    '='    shift, and go to state 93
    '>'    shift, and go to state 94
    '<'    shift, and go to state 95
    '#'    shift, and go to state 96
    '+'    shift, and go to state 97
    '-'    shift, and go to state 98
    '*'    shift, and go to state 99
    '/'    shift, and go to state 100
    ')'    shift, and go to state 135


State 111

   55 expr: expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   59     | expr . "mod" expr
   60     | expr . '=' expr
   61     | expr . '>' expr
   62     | expr . '<' expr
   63     | expr . "<>" expr
   64     | expr . "<=" expr
   65     | expr . ">=" expr
   69     | expr . "and" expr
   70     | expr . "or" expr
   74     | expr . '#' expr
   75     | "head" '(' expr . ')'

    "and"  shift, and go to state 87
    "mod"  shift, and go to state 88
    "or"   shift, and go to state 89
    ">="   shift, and go to state 90
    "<="   shift, and go to state 91
    "<>"   shift, and go to state 92
    '='    shift, and go to state 93
    '>'    shift, and go to state 94
    '<'    shift, and go to state 95
    '#'    shift, and go to state 96
    '+'    shift, and go to state 97
    '-'    shift, and go to state 98
    '*'    shift, and go to state 99
    '/'    shift, and go to state 100
    ')'    shift, and go to state 136


State 112

   55 expr: expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   59     | expr . "mod" expr
   60     | expr . '=' expr
   61     | expr . '>' expr
   62     | expr . '<' expr
   63     | expr . "<>" expr
   64     | expr . "<=" expr
   65     | expr . ">=" expr
   69     | expr . "and" expr
   70     | expr . "or" expr
   73     | "nil?" '(' expr . ')'
   74     | expr . '#' expr

    "and"  shift, and go to state 87
    "mod"  shift, and go to state 88
    "or"   shift, and go to state 89
    ">="   shift, and go to state 90
    "<="   shift, and go to state 91
    "<>"   shift, and go to state 92
    '='    shift, and go to state 93
    '>'    shift, and go to state 94
    '<'    shift, and go to state 95
    '#'    shift, and go to state 96
    '+'    shift, and go to state 97
    '-'    shift, and go to state 98
    '*'    shift, and go to state 99
    '/'    shift, and go to state 100
    ')'    shift, and go to state 137


State 113

   52 expr: '(' expr ')' .

    $default  reduce using rule 52 (expr)


State 114

   55 expr: expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   59     | expr . "mod" expr
   60     | expr . '=' expr
   61     | expr . '>' expr
   62     | expr . '<' expr
   63     | expr . "<>" expr
   64     | expr . "<=" expr
   65     | expr . ">=" expr
   69     | expr . "and" expr
   69     | expr "and" expr .
   70     | expr . "or" expr
   74     | expr . '#' expr

    "mod"  shift, and go to state 88
    ">="   shift, and go to state 90
    "<="   shift, and go to state 91
    "<>"   shift, and go to state 92
    '='    shift, and go to state 93
    '>'    shift, and go to state 94
    '<'    shift, and go to state 95
    '#'    shift, and go to state 96
    '+'    shift, and go to state 97
    '-'    shift, and go to state 98
    '*'    shift, and go to state 99
    '/'    shift, and go to state 100

    $default  reduce using rule 69 (expr)


State 115

   55 expr: expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   59     | expr . "mod" expr
   59     | expr "mod" expr .
   60     | expr . '=' expr
   61     | expr . '>' expr
   62     | expr . '<' expr
   63     | expr . "<>" expr
   64     | expr . "<=" expr
   65     | expr . ">=" expr
   69     | expr . "and" expr
   70     | expr . "or" expr
   74     | expr . '#' expr

    $default  reduce using rule 59 (expr)


State 116

   55 expr: expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   59     | expr . "mod" expr
   60     | expr . '=' expr
   61     | expr . '>' expr
   62     | expr . '<' expr
   63     | expr . "<>" expr
   64     | expr . "<=" expr
   65     | expr . ">=" expr
   69     | expr . "and" expr
   70     | expr . "or" expr
   70     | expr "or" expr .
   74     | expr . '#' expr

    "and"  shift, and go to state 87
    "mod"  shift, and go to state 88
    ">="   shift, and go to state 90
    "<="   shift, and go to state 91
    "<>"   shift, and go to state 92
    '='    shift, and go to state 93
    '>'    shift, and go to state 94
    '<'    shift, and go to state 95
    '#'    shift, and go to state 96
    '+'    shift, and go to state 97
    '-'    shift, and go to state 98
    '*'    shift, and go to state 99
    '/'    shift, and go to state 100

    $default  reduce using rule 70 (expr)


State 117

   55 expr: expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   59     | expr . "mod" expr
   60     | expr . '=' expr
   61     | expr . '>' expr
   62     | expr . '<' expr
   63     | expr . "<>" expr
   64     | expr . "<=" expr
   65     | expr . ">=" expr
   65     | expr ">=" expr .
   69     | expr . "and" expr
   70     | expr . "or" expr
   74     | expr . '#' expr

    "mod"  shift, and go to state 88
    '#'    shift, and go to state 96
    '+'    shift, and go to state 97
    '-'    shift, and go to state 98
    '*'    shift, and go to state 99
    '/'    shift, and go to state 100

    ">="  error (nonassociative)
    "<="  error (nonassociative)
    "<>"  error (nonassociative)
    '='   error (nonassociative)
    '>'   error (nonassociative)
    '<'   error (nonassociative)

    $default  reduce using rule 65 (expr)


State 118

   55 expr: expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   59     | expr . "mod" expr
   60     | expr . '=' expr
   61     | expr . '>' expr
   62     | expr . '<' expr
   63     | expr . "<>" expr
   64     | expr . "<=" expr
   64     | expr "<=" expr .
   65     | expr . ">=" expr
   69     | expr . "and" expr
   70     | expr . "or" expr
   74     | expr . '#' expr

    "mod"  shift, and go to state 88
    '#'    shift, and go to state 96
    '+'    shift, and go to state 97
    '-'    shift, and go to state 98
    '*'    shift, and go to state 99
    '/'    shift, and go to state 100

    ">="  error (nonassociative)
    "<="  error (nonassociative)
    "<>"  error (nonassociative)
    '='   error (nonassociative)
    '>'   error (nonassociative)
    '<'   error (nonassociative)

    $default  reduce using rule 64 (expr)


State 119

   55 expr: expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   59     | expr . "mod" expr
   60     | expr . '=' expr
   61     | expr . '>' expr
   62     | expr . '<' expr
   63     | expr . "<>" expr
   63     | expr "<>" expr .
   64     | expr . "<=" expr
   65     | expr . ">=" expr
   69     | expr . "and" expr
   70     | expr . "or" expr
   74     | expr . '#' expr

    "mod"  shift, and go to state 88
    '#'    shift, and go to state 96
    '+'    shift, and go to state 97
    '-'    shift, and go to state 98
    '*'    shift, and go to state 99
    '/'    shift, and go to state 100

    ">="  error (nonassociative)
    "<="  error (nonassociative)
    "<>"  error (nonassociative)
    '='   error (nonassociative)
    '>'   error (nonassociative)
    '<'   error (nonassociative)

    $default  reduce using rule 63 (expr)


State 120

   55 expr: expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   59     | expr . "mod" expr
   60     | expr . '=' expr
   60     | expr '=' expr .
   61     | expr . '>' expr
   62     | expr . '<' expr
   63     | expr . "<>" expr
   64     | expr . "<=" expr
   65     | expr . ">=" expr
   69     | expr . "and" expr
   70     | expr . "or" expr
   74     | expr . '#' expr

    "mod"  shift, and go to state 88
    '#'    shift, and go to state 96
    '+'    shift, and go to state 97
    '-'    shift, and go to state 98
    '*'    shift, and go to state 99
    '/'    shift, and go to state 100

    ">="  error (nonassociative)
    "<="  error (nonassociative)
    "<>"  error (nonassociative)
    '='   error (nonassociative)
    '>'   error (nonassociative)
    '<'   error (nonassociative)

    $default  reduce using rule 60 (expr)


State 121

   55 expr: expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   59     | expr . "mod" expr
   60     | expr . '=' expr
   61     | expr . '>' expr
   61     | expr '>' expr .
   62     | expr . '<' expr
   63     | expr . "<>" expr
   64     | expr . "<=" expr
   65     | expr . ">=" expr
   69     | expr . "and" expr
   70     | expr . "or" expr
   74     | expr . '#' expr

    "mod"  shift, and go to state 88
    '#'    shift, and go to state 96
    '+'    shift, and go to state 97
    '-'    shift, and go to state 98
    '*'    shift, and go to state 99
    '/'    shift, and go to state 100

    ">="  error (nonassociative)
    "<="  error (nonassociative)
    "<>"  error (nonassociative)
    '='   error (nonassociative)
    '>'   error (nonassociative)
    '<'   error (nonassociative)

    $default  reduce using rule 61 (expr)


State 122

   55 expr: expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   59     | expr . "mod" expr
   60     | expr . '=' expr
   61     | expr . '>' expr
   62     | expr . '<' expr
   62     | expr '<' expr .
   63     | expr . "<>" expr
   64     | expr . "<=" expr
   65     | expr . ">=" expr
   69     | expr . "and" expr
   70     | expr . "or" expr
   74     | expr . '#' expr

    "mod"  shift, and go to state 88
    '#'    shift, and go to state 96
    '+'    shift, and go to state 97
    '-'    shift, and go to state 98
    '*'    shift, and go to state 99
    '/'    shift, and go to state 100

    ">="  error (nonassociative)
    "<="  error (nonassociative)
    "<>"  error (nonassociative)
    '='   error (nonassociative)
    '>'   error (nonassociative)
    '<'   error (nonassociative)

    $default  reduce using rule 62 (expr)


State 123

   55 expr: expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   59     | expr . "mod" expr
   60     | expr . '=' expr
   61     | expr . '>' expr
   62     | expr . '<' expr
   63     | expr . "<>" expr
   64     | expr . "<=" expr
   65     | expr . ">=" expr
   69     | expr . "and" expr
   70     | expr . "or" expr
   74     | expr . '#' expr
   74     | expr '#' expr .

    "mod"  shift, and go to state 88
    '#'    shift, and go to state 96
    '+'    shift, and go to state 97
    '-'    shift, and go to state 98
    '*'    shift, and go to state 99
    '/'    shift, and go to state 100

    $default  reduce using rule 74 (expr)


State 124

   55 expr: expr . '+' expr
   55     | expr '+' expr .
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   59     | expr . "mod" expr
   60     | expr . '=' expr
   61     | expr . '>' expr
   62     | expr . '<' expr
   63     | expr . "<>" expr
   64     | expr . "<=" expr
   65     | expr . ">=" expr
   69     | expr . "and" expr
   70     | expr . "or" expr
   74     | expr . '#' expr

    "mod"  shift, and go to state 88
    '*'    shift, and go to state 99
    '/'    shift, and go to state 100

    $default  reduce using rule 55 (expr)


State 125

   55 expr: expr . '+' expr
   56     | expr . '-' expr
   56     | expr '-' expr .
   57     | expr . '*' expr
   58     | expr . '/' expr
   59     | expr . "mod" expr
   60     | expr . '=' expr
   61     | expr . '>' expr
   62     | expr . '<' expr
   63     | expr . "<>" expr
   64     | expr . "<=" expr
   65     | expr . ">=" expr
   69     | expr . "and" expr
   70     | expr . "or" expr
   74     | expr . '#' expr

    "mod"  shift, and go to state 88
    '*'    shift, and go to state 99
    '/'    shift, and go to state 100

    $default  reduce using rule 56 (expr)


State 126

   55 expr: expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   57     | expr '*' expr .
   58     | expr . '/' expr
   59     | expr . "mod" expr
   60     | expr . '=' expr
   61     | expr . '>' expr
   62     | expr . '<' expr
   63     | expr . "<>" expr
   64     | expr . "<=" expr
   65     | expr . ">=" expr
   69     | expr . "and" expr
   70     | expr . "or" expr
   74     | expr . '#' expr

    $default  reduce using rule 57 (expr)


State 127

   55 expr: expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   58     | expr '/' expr .
   59     | expr . "mod" expr
   60     | expr . '=' expr
   61     | expr . '>' expr
   62     | expr . '<' expr
   63     | expr . "<>" expr
   64     | expr . "<=" expr
   65     | expr . ">=" expr
   69     | expr . "and" expr
   70     | expr . "or" expr
   74     | expr . '#' expr

    $default  reduce using rule 58 (expr)


State 128

   30 stmt: "for" simple_list ';' expr . ';' simple_list ':' stmt_list "end"
   55 expr: expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   59     | expr . "mod" expr
   60     | expr . '=' expr
   61     | expr . '>' expr
   62     | expr . '<' expr
   63     | expr . "<>" expr
   64     | expr . "<=" expr
   65     | expr . ">=" expr
   69     | expr . "and" expr
   70     | expr . "or" expr
   74     | expr . '#' expr

    "and"  shift, and go to state 87
    "mod"  shift, and go to state 88
    "or"   shift, and go to state 89
    ">="   shift, and go to state 90
    "<="   shift, and go to state 91
    "<>"   shift, and go to state 92
    '='    shift, and go to state 93
    '>'    shift, and go to state 94
    '<'    shift, and go to state 95
    '#'    shift, and go to state 96
    '+'    shift, and go to state 97
    '-'    shift, and go to state 98
    '*'    shift, and go to state 99
    '/'    shift, and go to state 100
    ';'    shift, and go to state 138


State 129

   39 simple_list: simple_list ',' simple .

    $default  reduce using rule 39 (simple_list)


State 130

    9 stmt_list: stmt_list . stmt
   29 stmt: "if" expr ':' stmt_list . elsif_list "end"

    "exit"         shift, and go to state 28
    "return"       shift, and go to state 29
    "skip"         shift, and go to state 30
    "for"          shift, and go to state 32
    "if"           shift, and go to state 33
    "else"         shift, and go to state 139
    "elsif"        shift, and go to state 140
    T_var          shift, and go to state 34
    T_constString  shift, and go to state 35

    $default  reduce using rule 33 (else)

    stmt        go to state 72
    elsif_list  go to state 141
    else        go to state 142
    simple      go to state 42
    call        go to state 43
    atom        go to state 44


State 131

   40 call: T_var '(' expr_list ')' .

    $default  reduce using rule 40 (call)


State 132

   42 expr_list: expr_head expr .
   44 expr_head: expr_head expr . ','
   55 expr: expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   59     | expr . "mod" expr
   60     | expr . '=' expr
   61     | expr . '>' expr
   62     | expr . '<' expr
   63     | expr . "<>" expr
   64     | expr . "<=" expr
   65     | expr . ">=" expr
   69     | expr . "and" expr
   70     | expr . "or" expr
   74     | expr . '#' expr

    "and"  shift, and go to state 87
    "mod"  shift, and go to state 88
    "or"   shift, and go to state 89
    ">="   shift, and go to state 90
    "<="   shift, and go to state 91
    "<>"   shift, and go to state 92
    '='    shift, and go to state 93
    '>'    shift, and go to state 94
    '<'    shift, and go to state 95
    '#'    shift, and go to state 96
    '+'    shift, and go to state 97
    '-'    shift, and go to state 98
    '*'    shift, and go to state 99
    '/'    shift, and go to state 100
    ','    shift, and go to state 143

    $default  reduce using rule 42 (expr_list)


State 133

   47 atom: atom '[' expr ']' .

    $default  reduce using rule 47 (atom)


State 134

   55 expr: expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   59     | expr . "mod" expr
   60     | expr . '=' expr
   61     | expr . '>' expr
   62     | expr . '<' expr
   63     | expr . "<>" expr
   64     | expr . "<=" expr
   65     | expr . ">=" expr
   69     | expr . "and" expr
   70     | expr . "or" expr
   71     | "new" type '[' expr . ']'
   74     | expr . '#' expr

    "and"  shift, and go to state 87
    "mod"  shift, and go to state 88
    "or"   shift, and go to state 89
    ">="   shift, and go to state 90
    "<="   shift, and go to state 91
    "<>"   shift, and go to state 92
    '='    shift, and go to state 93
    '>'    shift, and go to state 94
    '<'    shift, and go to state 95
    '#'    shift, and go to state 96
    '+'    shift, and go to state 97
    '-'    shift, and go to state 98
    '*'    shift, and go to state 99
    '/'    shift, and go to state 100
    ']'    shift, and go to state 144


State 135

   76 expr: "tail" '(' expr ')' .

    $default  reduce using rule 76 (expr)


State 136

   75 expr: "head" '(' expr ')' .

    $default  reduce using rule 75 (expr)


State 137

   73 expr: "nil?" '(' expr ')' .

    $default  reduce using rule 73 (expr)


State 138

   30 stmt: "for" simple_list ';' expr ';' . simple_list ':' stmt_list "end"

    "skip"         shift, and go to state 30
    T_var          shift, and go to state 34
    T_constString  shift, and go to state 35

    simple       go to state 67
    simple_list  go to state 145
    call         go to state 43
    atom         go to state 44


State 139

   34 else: "else" . ':' stmt_list

    ':'  shift, and go to state 146


State 140

   32 elsif_list: "elsif" . expr ':' stmt_list elsif_list

    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "new"          shift, and go to state 52
    "nil"          shift, and go to state 53
    "tail"         shift, and go to state 54
    "head"         shift, and go to state 55
    "nil?"         shift, and go to state 56
    "not"          shift, and go to state 57
    T_constInt     shift, and go to state 58
    T_var          shift, and go to state 34
    T_constChar    shift, and go to state 59
    T_constString  shift, and go to state 35
    '+'            shift, and go to state 60
    '-'            shift, and go to state 61
    '('            shift, and go to state 62

    call  go to state 63
    atom  go to state 64
    expr  go to state 147


State 141

   29 stmt: "if" expr ':' stmt_list elsif_list . "end"

    "end"  shift, and go to state 148


State 142

   31 elsif_list: else .

    $default  reduce using rule 31 (elsif_list)


State 143

   44 expr_head: expr_head expr ',' .

    $default  reduce using rule 44 (expr_head)


State 144

   71 expr: "new" type '[' expr ']' .

    $default  reduce using rule 71 (expr)


State 145

   30 stmt: "for" simple_list ';' expr ';' simple_list . ':' stmt_list "end"
   39 simple_list: simple_list . ',' simple

    ':'  shift, and go to state 149
    ','  shift, and go to state 102


State 146

   34 else: "else" ':' . stmt_list

    "exit"         shift, and go to state 28
    "return"       shift, and go to state 29
    "skip"         shift, and go to state 30
    "for"          shift, and go to state 32
    "if"           shift, and go to state 33
    T_var          shift, and go to state 34
    T_constString  shift, and go to state 35

    stmt_list  go to state 150
    stmt       go to state 41
    simple     go to state 42
    call       go to state 43
    atom       go to state 44


State 147

   32 elsif_list: "elsif" expr . ':' stmt_list elsif_list
   55 expr: expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   59     | expr . "mod" expr
   60     | expr . '=' expr
   61     | expr . '>' expr
   62     | expr . '<' expr
   63     | expr . "<>" expr
   64     | expr . "<=" expr
   65     | expr . ">=" expr
   69     | expr . "and" expr
   70     | expr . "or" expr
   74     | expr . '#' expr

    "and"  shift, and go to state 87
    "mod"  shift, and go to state 88
    "or"   shift, and go to state 89
    ">="   shift, and go to state 90
    "<="   shift, and go to state 91
    "<>"   shift, and go to state 92
    '='    shift, and go to state 93
    '>'    shift, and go to state 94
    '<'    shift, and go to state 95
    '#'    shift, and go to state 96
    '+'    shift, and go to state 97
    '-'    shift, and go to state 98
    '*'    shift, and go to state 99
    '/'    shift, and go to state 100
    ':'    shift, and go to state 151


State 148

   29 stmt: "if" expr ':' stmt_list elsif_list "end" .

    $default  reduce using rule 29 (stmt)


State 149

   30 stmt: "for" simple_list ';' expr ';' simple_list ':' . stmt_list "end"

    "exit"         shift, and go to state 28
    "return"       shift, and go to state 29
    "skip"         shift, and go to state 30
    "for"          shift, and go to state 32
    "if"           shift, and go to state 33
    T_var          shift, and go to state 34
    T_constString  shift, and go to state 35

    stmt_list  go to state 152
    stmt       go to state 41
    simple     go to state 42
    call       go to state 43
    atom       go to state 44


State 150

    9 stmt_list: stmt_list . stmt
   34 else: "else" ':' stmt_list .

    "exit"         shift, and go to state 28
    "return"       shift, and go to state 29
    "skip"         shift, and go to state 30
    "for"          shift, and go to state 32
    "if"           shift, and go to state 33
    T_var          shift, and go to state 34
    T_constString  shift, and go to state 35

    $default  reduce using rule 34 (else)

    stmt    go to state 72
    simple  go to state 42
    call    go to state 43
    atom    go to state 44


State 151

   32 elsif_list: "elsif" expr ':' . stmt_list elsif_list

    "exit"         shift, and go to state 28
    "return"       shift, and go to state 29
    "skip"         shift, and go to state 30
    "for"          shift, and go to state 32
    "if"           shift, and go to state 33
    T_var          shift, and go to state 34
    T_constString  shift, and go to state 35

    stmt_list  go to state 153
    stmt       go to state 41
    simple     go to state 42
    call       go to state 43
    atom       go to state 44


State 152

    9 stmt_list: stmt_list . stmt
   30 stmt: "for" simple_list ';' expr ';' simple_list ':' stmt_list . "end"

    "end"          shift, and go to state 154
    "exit"         shift, and go to state 28
    "return"       shift, and go to state 29
    "skip"         shift, and go to state 30
    "for"          shift, and go to state 32
    "if"           shift, and go to state 33
    T_var          shift, and go to state 34
    T_constString  shift, and go to state 35

    stmt    go to state 72
    simple  go to state 42
    call    go to state 43
    atom    go to state 44


State 153

    9 stmt_list: stmt_list . stmt
   32 elsif_list: "elsif" expr ':' stmt_list . elsif_list

    "exit"         shift, and go to state 28
    "return"       shift, and go to state 29
    "skip"         shift, and go to state 30
    "for"          shift, and go to state 32
    "if"           shift, and go to state 33
    "else"         shift, and go to state 139
    "elsif"        shift, and go to state 140
    T_var          shift, and go to state 34
    T_constString  shift, and go to state 35

    $default  reduce using rule 33 (else)

    stmt        go to state 72
    elsif_list  go to state 155
    else        go to state 142
    simple      go to state 42
    call        go to state 43
    atom        go to state 44


State 154

   30 stmt: "for" simple_list ';' expr ';' simple_list ':' stmt_list "end" .

    $default  reduce using rule 30 (stmt)


State 155

   32 elsif_list: "elsif" expr ':' stmt_list elsif_list .

    $default  reduce using rule 32 (elsif_list)
