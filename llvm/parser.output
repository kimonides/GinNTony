Grammar

    0 $accept: program $end

    1 program: func_def

    2 func_def: "def" header_def ':' definition_list stmt_list "end"

    3 func_decl: "decl" header_decl

    4 definition_list: %empty
    5                | definition_list func_def
    6                | definition_list func_decl
    7                | definition_list var_def

    8 stmt_list: stmt
    9          | stmt_list stmt

   10 header_def: T_var '(' formal_list ')'
   11           | type T_var '(' formal_list ')'

   12 header_decl: T_var '(' formal_list ')'
   13            | type T_var '(' formal_list ')'

   14 formal_list: %empty
   15            | formal_head formal

   16 formal_head: %empty
   17            | formal_head formal ';'

   18 formal: type var_list
   19       | "ref" type var_list

   20 var_list: T_var
   21         | var_list ',' T_var

   22 type: "int"
   23     | "bool"
   24     | "char"
   25     | type '[' ']'
   26     | "list" '[' type ']'

   27 var_def: type var_list

   28 stmt: simple
   29     | "exit"
   30     | "return" expr
   31     | "if" expr ':' stmt_list elsif_list "end"
   32     | "for" simple_list ';' expr ';' simple_list ':' stmt_list "end"

   33 elsif_list: else
   34           | "elsif" expr ':' stmt_list elsif_list

   35 else: %empty
   36     | "else" ':' stmt_list

   37 simple: "skip"
   38       | atom ":=" expr
   39       | atom ":=" "new" type '[' expr ']'
   40       | call

   41 simple_list: simple
   42            | simple_list ',' simple

   43 call: T_var '(' expr_list ')'

   44 expr_list: %empty
   45          | expr_head expr

   46 expr_head: %empty
   47          | expr_head expr ','

   48 atom: T_var
   49     | T_constString
   50     | T_var '[' expr ']'
   51     | call

   52 expr: atom
   53     | T_constInt
   54     | T_constChar
   55     | '(' expr ')'
   56     | '+' expr
   57     | '-' expr
   58     | expr '+' expr
   59     | expr '-' expr
   60     | expr '*' expr
   61     | expr '/' expr
   62     | expr "mod" expr
   63     | expr '=' expr
   64     | expr '>' expr
   65     | expr '<' expr
   66     | expr "<>" expr
   67     | expr "<=" expr
   68     | expr ">=" expr
   69     | "true"
   70     | "false"
   71     | "not" expr
   72     | expr "and" expr
   73     | expr "or" expr
   74     | "nil"
   75     | "nil?" '(' expr ')'
   76     | expr '#' expr
   77     | "head" '(' expr ')'
   78     | "tail" '(' expr ')'


Terminals, with rules where they appear

    $end (0) 0
    '#' (35) 76
    '(' (40) 10 11 12 13 43 55 75 77 78
    ')' (41) 10 11 12 13 43 55 75 77 78
    '*' (42) 60
    '+' (43) 56 58
    ',' (44) 21 42 47
    '-' (45) 57 59
    '/' (47) 61
    ':' (58) 2 31 32 34 36
    ';' (59) 17 32
    '<' (60) 65
    '=' (61) 63
    '>' (62) 64
    '[' (91) 25 26 39 50
    ']' (93) 25 26 39 50
    error (256)
    "and" (258) 72
    "end" (259) 2 31 32
    "list" (260) 26
    "ref" (261) 19
    "bool" (262) 23
    "exit" (263) 29
    "mod" (264) 62
    "return" (265) 30
    "char" (266) 24
    "false" (267) 70
    "true" (268) 69
    "new" (269) 39
    "skip" (270) 37
    "decl" (271) 3
    "for" (272) 32
    "nil" (273) 74
    "tail" (274) 78
    "head" (275) 77
    "def" (276) 2
    "nil?" (277) 75
    "if" (278) 31
    "else" (279) 36
    "elsif" (280) 34
    "not" (281) 71
    "int" (282) 22
    "or" (283) 73
    ":=" (284) 38 39
    ">=" (285) 68
    "<=" (286) 67
    "<>" (287) 66
    T_constInt <num> (288) 53
    T_var <str> (289) 10 11 12 13 20 21 43 48 50
    T_constChar <num> (290) 54
    T_constString <str> (291) 49
    UPLUS (292)
    UMINUS (293)


Nonterminals, with rules where they appear

    $accept (54)
        on left: 0
    program <func_def> (55)
        on left: 1
        on right: 0
    func_def <func_def> (56)
        on left: 2
        on right: 1 5
    func_decl <func_decl> (57)
        on left: 3
        on right: 6
    definition_list <def_list> (58)
        on left: 4 5 6 7
        on right: 2 5 6 7
    stmt_list <stmt_list> (59)
        on left: 8 9
        on right: 2 9 31 32 34 36
    header_def <header> (60)
        on left: 10 11
        on right: 2
    header_decl <header> (61)
        on left: 12 13
        on right: 3
    formal_list <formal_list> (62)
        on left: 14 15
        on right: 10 11 12 13
    formal_head <formal_list> (63)
        on left: 16 17
        on right: 15 17
    formal <formal> (64)
        on left: 18 19
        on right: 15 17
    var_list <var_list> (65)
        on left: 20 21
        on right: 18 19 21 27
    type <type> (66)
        on left: 22 23 24 25 26
        on right: 11 13 18 19 25 26 27 39
    var_def <var_definition> (67)
        on left: 27
        on right: 7
    stmt <stmt> (68)
        on left: 28 29 30 31 32
        on right: 8 9
    elsif_list <ifClass> (69)
        on left: 33 34
        on right: 31 34
    else <ifClass> (70)
        on left: 35 36
        on right: 33
    simple <stmt> (71)
        on left: 37 38 39 40
        on right: 28 41 42
    simple_list <stmt_list> (72)
        on left: 41 42
        on right: 32 42
    call <call_object> (73)
        on left: 43
        on right: 40 51
    expr_list <expr_list> (74)
        on left: 44 45
        on right: 43
    expr_head <expr_list> (75)
        on left: 46 47
        on right: 45 47
    atom <expr> (76)
        on left: 48 49 50 51
        on right: 38 39 52
    expr <expr> (77)
        on left: 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78
        on right: 30 31 32 34 38 39 45 47 50 55 56 57 58 59 60 61 62 63 64 65 66 67 68 71 72 73 75 76 77 78


State 0

    0 $accept: . program $end

    "def"  shift, and go to state 1

    program   go to state 2
    func_def  go to state 3


State 1

    2 func_def: "def" . header_def ':' definition_list stmt_list "end"

    "list"  shift, and go to state 4
    "bool"  shift, and go to state 5
    "char"  shift, and go to state 6
    "int"   shift, and go to state 7
    T_var   shift, and go to state 8

    header_def  go to state 9
    type        go to state 10


State 2

    0 $accept: program . $end

    $end  shift, and go to state 11


State 3

    1 program: func_def .

    $default  reduce using rule 1 (program)


State 4

   26 type: "list" . '[' type ']'

    '['  shift, and go to state 12


State 5

   23 type: "bool" .

    $default  reduce using rule 23 (type)


State 6

   24 type: "char" .

    $default  reduce using rule 24 (type)


State 7

   22 type: "int" .

    $default  reduce using rule 22 (type)


State 8

   10 header_def: T_var . '(' formal_list ')'

    '('  shift, and go to state 13


State 9

    2 func_def: "def" header_def . ':' definition_list stmt_list "end"

    ':'  shift, and go to state 14


State 10

   11 header_def: type . T_var '(' formal_list ')'
   25 type: type . '[' ']'

    T_var  shift, and go to state 15
    '['    shift, and go to state 16


State 11

    0 $accept: program $end .

    $default  accept


State 12

   26 type: "list" '[' . type ']'

    "list"  shift, and go to state 4
    "bool"  shift, and go to state 5
    "char"  shift, and go to state 6
    "int"   shift, and go to state 7

    type  go to state 17


State 13

   10 header_def: T_var '(' . formal_list ')'

    ')'       reduce using rule 14 (formal_list)
    $default  reduce using rule 16 (formal_head)

    formal_list  go to state 18
    formal_head  go to state 19


State 14

    2 func_def: "def" header_def ':' . definition_list stmt_list "end"

    $default  reduce using rule 4 (definition_list)

    definition_list  go to state 20


State 15

   11 header_def: type T_var . '(' formal_list ')'

    '('  shift, and go to state 21


State 16

   25 type: type '[' . ']'

    ']'  shift, and go to state 22


State 17

   25 type: type . '[' ']'
   26     | "list" '[' type . ']'

    '['  shift, and go to state 16
    ']'  shift, and go to state 23


State 18

   10 header_def: T_var '(' formal_list . ')'

    ')'  shift, and go to state 24


State 19

   15 formal_list: formal_head . formal
   17 formal_head: formal_head . formal ';'

    "list"  shift, and go to state 4
    "ref"   shift, and go to state 25
    "bool"  shift, and go to state 5
    "char"  shift, and go to state 6
    "int"   shift, and go to state 7

    formal  go to state 26
    type    go to state 27


State 20

    2 func_def: "def" header_def ':' definition_list . stmt_list "end"
    5 definition_list: definition_list . func_def
    6                | definition_list . func_decl
    7                | definition_list . var_def

    "list"         shift, and go to state 4
    "bool"         shift, and go to state 5
    "exit"         shift, and go to state 28
    "return"       shift, and go to state 29
    "char"         shift, and go to state 6
    "skip"         shift, and go to state 30
    "decl"         shift, and go to state 31
    "for"          shift, and go to state 32
    "def"          shift, and go to state 1
    "if"           shift, and go to state 33
    "int"          shift, and go to state 7
    T_var          shift, and go to state 34
    T_constString  shift, and go to state 35

    func_def   go to state 36
    func_decl  go to state 37
    stmt_list  go to state 38
    type       go to state 39
    var_def    go to state 40
    stmt       go to state 41
    simple     go to state 42
    call       go to state 43
    atom       go to state 44


State 21

   11 header_def: type T_var '(' . formal_list ')'

    ')'       reduce using rule 14 (formal_list)
    $default  reduce using rule 16 (formal_head)

    formal_list  go to state 45
    formal_head  go to state 19


State 22

   25 type: type '[' ']' .

    $default  reduce using rule 25 (type)


State 23

   26 type: "list" '[' type ']' .

    $default  reduce using rule 26 (type)


State 24

   10 header_def: T_var '(' formal_list ')' .

    $default  reduce using rule 10 (header_def)


State 25

   19 formal: "ref" . type var_list

    "list"  shift, and go to state 4
    "bool"  shift, and go to state 5
    "char"  shift, and go to state 6
    "int"   shift, and go to state 7

    type  go to state 46


State 26

   15 formal_list: formal_head formal .
   17 formal_head: formal_head formal . ';'

    ';'  shift, and go to state 47

    $default  reduce using rule 15 (formal_list)


State 27

   18 formal: type . var_list
   25 type: type . '[' ']'

    T_var  shift, and go to state 48
    '['    shift, and go to state 16

    var_list  go to state 49


State 28

   29 stmt: "exit" .

    $default  reduce using rule 29 (stmt)


State 29

   30 stmt: "return" . expr

    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "nil"          shift, and go to state 52
    "tail"         shift, and go to state 53
    "head"         shift, and go to state 54
    "nil?"         shift, and go to state 55
    "not"          shift, and go to state 56
    T_constInt     shift, and go to state 57
    T_var          shift, and go to state 34
    T_constChar    shift, and go to state 58
    T_constString  shift, and go to state 35
    '+'            shift, and go to state 59
    '-'            shift, and go to state 60
    '('            shift, and go to state 61

    call  go to state 62
    atom  go to state 63
    expr  go to state 64


State 30

   37 simple: "skip" .

    $default  reduce using rule 37 (simple)


State 31

    3 func_decl: "decl" . header_decl

    "list"  shift, and go to state 4
    "bool"  shift, and go to state 5
    "char"  shift, and go to state 6
    "int"   shift, and go to state 7
    T_var   shift, and go to state 65

    header_decl  go to state 66
    type         go to state 67


State 32

   32 stmt: "for" . simple_list ';' expr ';' simple_list ':' stmt_list "end"

    "skip"         shift, and go to state 30
    T_var          shift, and go to state 34
    T_constString  shift, and go to state 35

    simple       go to state 68
    simple_list  go to state 69
    call         go to state 43
    atom         go to state 44


State 33

   31 stmt: "if" . expr ':' stmt_list elsif_list "end"

    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "nil"          shift, and go to state 52
    "tail"         shift, and go to state 53
    "head"         shift, and go to state 54
    "nil?"         shift, and go to state 55
    "not"          shift, and go to state 56
    T_constInt     shift, and go to state 57
    T_var          shift, and go to state 34
    T_constChar    shift, and go to state 58
    T_constString  shift, and go to state 35
    '+'            shift, and go to state 59
    '-'            shift, and go to state 60
    '('            shift, and go to state 61

    call  go to state 62
    atom  go to state 63
    expr  go to state 70


State 34

   43 call: T_var . '(' expr_list ')'
   48 atom: T_var .
   50     | T_var . '[' expr ']'

    '('  shift, and go to state 71
    '['  shift, and go to state 72

    $default  reduce using rule 48 (atom)


State 35

   49 atom: T_constString .

    $default  reduce using rule 49 (atom)


State 36

    5 definition_list: definition_list func_def .

    $default  reduce using rule 5 (definition_list)


State 37

    6 definition_list: definition_list func_decl .

    $default  reduce using rule 6 (definition_list)


State 38

    2 func_def: "def" header_def ':' definition_list stmt_list . "end"
    9 stmt_list: stmt_list . stmt

    "end"          shift, and go to state 73
    "exit"         shift, and go to state 28
    "return"       shift, and go to state 29
    "skip"         shift, and go to state 30
    "for"          shift, and go to state 32
    "if"           shift, and go to state 33
    T_var          shift, and go to state 34
    T_constString  shift, and go to state 35

    stmt    go to state 74
    simple  go to state 42
    call    go to state 43
    atom    go to state 44


State 39

   25 type: type . '[' ']'
   27 var_def: type . var_list

    T_var  shift, and go to state 48
    '['    shift, and go to state 16

    var_list  go to state 75


State 40

    7 definition_list: definition_list var_def .

    $default  reduce using rule 7 (definition_list)


State 41

    8 stmt_list: stmt .

    $default  reduce using rule 8 (stmt_list)


State 42

   28 stmt: simple .

    $default  reduce using rule 28 (stmt)


State 43

   40 simple: call .
   51 atom: call .

    ":="      reduce using rule 51 (atom)
    $default  reduce using rule 40 (simple)


State 44

   38 simple: atom . ":=" expr
   39       | atom . ":=" "new" type '[' expr ']'

    ":="  shift, and go to state 76


State 45

   11 header_def: type T_var '(' formal_list . ')'

    ')'  shift, and go to state 77


State 46

   19 formal: "ref" type . var_list
   25 type: type . '[' ']'

    T_var  shift, and go to state 48
    '['    shift, and go to state 16

    var_list  go to state 78


State 47

   17 formal_head: formal_head formal ';' .

    $default  reduce using rule 17 (formal_head)


State 48

   20 var_list: T_var .

    $default  reduce using rule 20 (var_list)


State 49

   18 formal: type var_list .
   21 var_list: var_list . ',' T_var

    ','  shift, and go to state 79

    $default  reduce using rule 18 (formal)


State 50

   70 expr: "false" .

    $default  reduce using rule 70 (expr)


State 51

   69 expr: "true" .

    $default  reduce using rule 69 (expr)


State 52

   74 expr: "nil" .

    $default  reduce using rule 74 (expr)


State 53

   78 expr: "tail" . '(' expr ')'

    '('  shift, and go to state 80


State 54

   77 expr: "head" . '(' expr ')'

    '('  shift, and go to state 81


State 55

   75 expr: "nil?" . '(' expr ')'

    '('  shift, and go to state 82


State 56

   71 expr: "not" . expr

    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "nil"          shift, and go to state 52
    "tail"         shift, and go to state 53
    "head"         shift, and go to state 54
    "nil?"         shift, and go to state 55
    "not"          shift, and go to state 56
    T_constInt     shift, and go to state 57
    T_var          shift, and go to state 34
    T_constChar    shift, and go to state 58
    T_constString  shift, and go to state 35
    '+'            shift, and go to state 59
    '-'            shift, and go to state 60
    '('            shift, and go to state 61

    call  go to state 62
    atom  go to state 63
    expr  go to state 83


State 57

   53 expr: T_constInt .

    $default  reduce using rule 53 (expr)


State 58

   54 expr: T_constChar .

    $default  reduce using rule 54 (expr)


State 59

   56 expr: '+' . expr

    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "nil"          shift, and go to state 52
    "tail"         shift, and go to state 53
    "head"         shift, and go to state 54
    "nil?"         shift, and go to state 55
    "not"          shift, and go to state 56
    T_constInt     shift, and go to state 57
    T_var          shift, and go to state 34
    T_constChar    shift, and go to state 58
    T_constString  shift, and go to state 35
    '+'            shift, and go to state 59
    '-'            shift, and go to state 60
    '('            shift, and go to state 61

    call  go to state 62
    atom  go to state 63
    expr  go to state 84


State 60

   57 expr: '-' . expr

    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "nil"          shift, and go to state 52
    "tail"         shift, and go to state 53
    "head"         shift, and go to state 54
    "nil?"         shift, and go to state 55
    "not"          shift, and go to state 56
    T_constInt     shift, and go to state 57
    T_var          shift, and go to state 34
    T_constChar    shift, and go to state 58
    T_constString  shift, and go to state 35
    '+'            shift, and go to state 59
    '-'            shift, and go to state 60
    '('            shift, and go to state 61

    call  go to state 62
    atom  go to state 63
    expr  go to state 85


State 61

   55 expr: '(' . expr ')'

    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "nil"          shift, and go to state 52
    "tail"         shift, and go to state 53
    "head"         shift, and go to state 54
    "nil?"         shift, and go to state 55
    "not"          shift, and go to state 56
    T_constInt     shift, and go to state 57
    T_var          shift, and go to state 34
    T_constChar    shift, and go to state 58
    T_constString  shift, and go to state 35
    '+'            shift, and go to state 59
    '-'            shift, and go to state 60
    '('            shift, and go to state 61

    call  go to state 62
    atom  go to state 63
    expr  go to state 86


State 62

   51 atom: call .

    $default  reduce using rule 51 (atom)


State 63

   52 expr: atom .

    $default  reduce using rule 52 (expr)


State 64

   30 stmt: "return" expr .
   58 expr: expr . '+' expr
   59     | expr . '-' expr
   60     | expr . '*' expr
   61     | expr . '/' expr
   62     | expr . "mod" expr
   63     | expr . '=' expr
   64     | expr . '>' expr
   65     | expr . '<' expr
   66     | expr . "<>" expr
   67     | expr . "<=" expr
   68     | expr . ">=" expr
   72     | expr . "and" expr
   73     | expr . "or" expr
   76     | expr . '#' expr

    "and"  shift, and go to state 87
    "mod"  shift, and go to state 88
    "or"   shift, and go to state 89
    ">="   shift, and go to state 90
    "<="   shift, and go to state 91
    "<>"   shift, and go to state 92
    '='    shift, and go to state 93
    '>'    shift, and go to state 94
    '<'    shift, and go to state 95
    '#'    shift, and go to state 96
    '+'    shift, and go to state 97
    '-'    shift, and go to state 98
    '*'    shift, and go to state 99
    '/'    shift, and go to state 100

    $default  reduce using rule 30 (stmt)


State 65

   12 header_decl: T_var . '(' formal_list ')'

    '('  shift, and go to state 101


State 66

    3 func_decl: "decl" header_decl .

    $default  reduce using rule 3 (func_decl)


State 67

   13 header_decl: type . T_var '(' formal_list ')'
   25 type: type . '[' ']'

    T_var  shift, and go to state 102
    '['    shift, and go to state 16


State 68

   41 simple_list: simple .

    $default  reduce using rule 41 (simple_list)


State 69

   32 stmt: "for" simple_list . ';' expr ';' simple_list ':' stmt_list "end"
   42 simple_list: simple_list . ',' simple

    ';'  shift, and go to state 103
    ','  shift, and go to state 104


State 70

   31 stmt: "if" expr . ':' stmt_list elsif_list "end"
   58 expr: expr . '+' expr
   59     | expr . '-' expr
   60     | expr . '*' expr
   61     | expr . '/' expr
   62     | expr . "mod" expr
   63     | expr . '=' expr
   64     | expr . '>' expr
   65     | expr . '<' expr
   66     | expr . "<>" expr
   67     | expr . "<=" expr
   68     | expr . ">=" expr
   72     | expr . "and" expr
   73     | expr . "or" expr
   76     | expr . '#' expr

    "and"  shift, and go to state 87
    "mod"  shift, and go to state 88
    "or"   shift, and go to state 89
    ">="   shift, and go to state 90
    "<="   shift, and go to state 91
    "<>"   shift, and go to state 92
    '='    shift, and go to state 93
    '>'    shift, and go to state 94
    '<'    shift, and go to state 95
    '#'    shift, and go to state 96
    '+'    shift, and go to state 97
    '-'    shift, and go to state 98
    '*'    shift, and go to state 99
    '/'    shift, and go to state 100
    ':'    shift, and go to state 105


State 71

   43 call: T_var '(' . expr_list ')'

    ')'       reduce using rule 44 (expr_list)
    $default  reduce using rule 46 (expr_head)

    expr_list  go to state 106
    expr_head  go to state 107


State 72

   50 atom: T_var '[' . expr ']'

    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "nil"          shift, and go to state 52
    "tail"         shift, and go to state 53
    "head"         shift, and go to state 54
    "nil?"         shift, and go to state 55
    "not"          shift, and go to state 56
    T_constInt     shift, and go to state 57
    T_var          shift, and go to state 34
    T_constChar    shift, and go to state 58
    T_constString  shift, and go to state 35
    '+'            shift, and go to state 59
    '-'            shift, and go to state 60
    '('            shift, and go to state 61

    call  go to state 62
    atom  go to state 63
    expr  go to state 108


State 73

    2 func_def: "def" header_def ':' definition_list stmt_list "end" .

    $default  reduce using rule 2 (func_def)


State 74

    9 stmt_list: stmt_list stmt .

    $default  reduce using rule 9 (stmt_list)


State 75

   21 var_list: var_list . ',' T_var
   27 var_def: type var_list .

    ','  shift, and go to state 79

    $default  reduce using rule 27 (var_def)


State 76

   38 simple: atom ":=" . expr
   39       | atom ":=" . "new" type '[' expr ']'

    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "new"          shift, and go to state 109
    "nil"          shift, and go to state 52
    "tail"         shift, and go to state 53
    "head"         shift, and go to state 54
    "nil?"         shift, and go to state 55
    "not"          shift, and go to state 56
    T_constInt     shift, and go to state 57
    T_var          shift, and go to state 34
    T_constChar    shift, and go to state 58
    T_constString  shift, and go to state 35
    '+'            shift, and go to state 59
    '-'            shift, and go to state 60
    '('            shift, and go to state 61

    call  go to state 62
    atom  go to state 63
    expr  go to state 110


State 77

   11 header_def: type T_var '(' formal_list ')' .

    $default  reduce using rule 11 (header_def)


State 78

   19 formal: "ref" type var_list .
   21 var_list: var_list . ',' T_var

    ','  shift, and go to state 79

    $default  reduce using rule 19 (formal)


State 79

   21 var_list: var_list ',' . T_var

    T_var  shift, and go to state 111


State 80

   78 expr: "tail" '(' . expr ')'

    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "nil"          shift, and go to state 52
    "tail"         shift, and go to state 53
    "head"         shift, and go to state 54
    "nil?"         shift, and go to state 55
    "not"          shift, and go to state 56
    T_constInt     shift, and go to state 57
    T_var          shift, and go to state 34
    T_constChar    shift, and go to state 58
    T_constString  shift, and go to state 35
    '+'            shift, and go to state 59
    '-'            shift, and go to state 60
    '('            shift, and go to state 61

    call  go to state 62
    atom  go to state 63
    expr  go to state 112


State 81

   77 expr: "head" '(' . expr ')'

    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "nil"          shift, and go to state 52
    "tail"         shift, and go to state 53
    "head"         shift, and go to state 54
    "nil?"         shift, and go to state 55
    "not"          shift, and go to state 56
    T_constInt     shift, and go to state 57
    T_var          shift, and go to state 34
    T_constChar    shift, and go to state 58
    T_constString  shift, and go to state 35
    '+'            shift, and go to state 59
    '-'            shift, and go to state 60
    '('            shift, and go to state 61

    call  go to state 62
    atom  go to state 63
    expr  go to state 113


State 82

   75 expr: "nil?" '(' . expr ')'

    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "nil"          shift, and go to state 52
    "tail"         shift, and go to state 53
    "head"         shift, and go to state 54
    "nil?"         shift, and go to state 55
    "not"          shift, and go to state 56
    T_constInt     shift, and go to state 57
    T_var          shift, and go to state 34
    T_constChar    shift, and go to state 58
    T_constString  shift, and go to state 35
    '+'            shift, and go to state 59
    '-'            shift, and go to state 60
    '('            shift, and go to state 61

    call  go to state 62
    atom  go to state 63
    expr  go to state 114


State 83

   58 expr: expr . '+' expr
   59     | expr . '-' expr
   60     | expr . '*' expr
   61     | expr . '/' expr
   62     | expr . "mod" expr
   63     | expr . '=' expr
   64     | expr . '>' expr
   65     | expr . '<' expr
   66     | expr . "<>" expr
   67     | expr . "<=" expr
   68     | expr . ">=" expr
   71     | "not" expr .
   72     | expr . "and" expr
   73     | expr . "or" expr
   76     | expr . '#' expr

    "mod"  shift, and go to state 88
    ">="   shift, and go to state 90
    "<="   shift, and go to state 91
    "<>"   shift, and go to state 92
    '='    shift, and go to state 93
    '>'    shift, and go to state 94
    '<'    shift, and go to state 95
    '#'    shift, and go to state 96
    '+'    shift, and go to state 97
    '-'    shift, and go to state 98
    '*'    shift, and go to state 99
    '/'    shift, and go to state 100

    $default  reduce using rule 71 (expr)


State 84

   56 expr: '+' expr .
   58     | expr . '+' expr
   59     | expr . '-' expr
   60     | expr . '*' expr
   61     | expr . '/' expr
   62     | expr . "mod" expr
   63     | expr . '=' expr
   64     | expr . '>' expr
   65     | expr . '<' expr
   66     | expr . "<>" expr
   67     | expr . "<=" expr
   68     | expr . ">=" expr
   72     | expr . "and" expr
   73     | expr . "or" expr
   76     | expr . '#' expr

    $default  reduce using rule 56 (expr)


State 85

   57 expr: '-' expr .
   58     | expr . '+' expr
   59     | expr . '-' expr
   60     | expr . '*' expr
   61     | expr . '/' expr
   62     | expr . "mod" expr
   63     | expr . '=' expr
   64     | expr . '>' expr
   65     | expr . '<' expr
   66     | expr . "<>" expr
   67     | expr . "<=" expr
   68     | expr . ">=" expr
   72     | expr . "and" expr
   73     | expr . "or" expr
   76     | expr . '#' expr

    $default  reduce using rule 57 (expr)


State 86

   55 expr: '(' expr . ')'
   58     | expr . '+' expr
   59     | expr . '-' expr
   60     | expr . '*' expr
   61     | expr . '/' expr
   62     | expr . "mod" expr
   63     | expr . '=' expr
   64     | expr . '>' expr
   65     | expr . '<' expr
   66     | expr . "<>" expr
   67     | expr . "<=" expr
   68     | expr . ">=" expr
   72     | expr . "and" expr
   73     | expr . "or" expr
   76     | expr . '#' expr

    "and"  shift, and go to state 87
    "mod"  shift, and go to state 88
    "or"   shift, and go to state 89
    ">="   shift, and go to state 90
    "<="   shift, and go to state 91
    "<>"   shift, and go to state 92
    '='    shift, and go to state 93
    '>'    shift, and go to state 94
    '<'    shift, and go to state 95
    '#'    shift, and go to state 96
    '+'    shift, and go to state 97
    '-'    shift, and go to state 98
    '*'    shift, and go to state 99
    '/'    shift, and go to state 100
    ')'    shift, and go to state 115


State 87

   72 expr: expr "and" . expr

    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "nil"          shift, and go to state 52
    "tail"         shift, and go to state 53
    "head"         shift, and go to state 54
    "nil?"         shift, and go to state 55
    "not"          shift, and go to state 56
    T_constInt     shift, and go to state 57
    T_var          shift, and go to state 34
    T_constChar    shift, and go to state 58
    T_constString  shift, and go to state 35
    '+'            shift, and go to state 59
    '-'            shift, and go to state 60
    '('            shift, and go to state 61

    call  go to state 62
    atom  go to state 63
    expr  go to state 116


State 88

   62 expr: expr "mod" . expr

    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "nil"          shift, and go to state 52
    "tail"         shift, and go to state 53
    "head"         shift, and go to state 54
    "nil?"         shift, and go to state 55
    "not"          shift, and go to state 56
    T_constInt     shift, and go to state 57
    T_var          shift, and go to state 34
    T_constChar    shift, and go to state 58
    T_constString  shift, and go to state 35
    '+'            shift, and go to state 59
    '-'            shift, and go to state 60
    '('            shift, and go to state 61

    call  go to state 62
    atom  go to state 63
    expr  go to state 117


State 89

   73 expr: expr "or" . expr

    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "nil"          shift, and go to state 52
    "tail"         shift, and go to state 53
    "head"         shift, and go to state 54
    "nil?"         shift, and go to state 55
    "not"          shift, and go to state 56
    T_constInt     shift, and go to state 57
    T_var          shift, and go to state 34
    T_constChar    shift, and go to state 58
    T_constString  shift, and go to state 35
    '+'            shift, and go to state 59
    '-'            shift, and go to state 60
    '('            shift, and go to state 61

    call  go to state 62
    atom  go to state 63
    expr  go to state 118


State 90

   68 expr: expr ">=" . expr

    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "nil"          shift, and go to state 52
    "tail"         shift, and go to state 53
    "head"         shift, and go to state 54
    "nil?"         shift, and go to state 55
    "not"          shift, and go to state 56
    T_constInt     shift, and go to state 57
    T_var          shift, and go to state 34
    T_constChar    shift, and go to state 58
    T_constString  shift, and go to state 35
    '+'            shift, and go to state 59
    '-'            shift, and go to state 60
    '('            shift, and go to state 61

    call  go to state 62
    atom  go to state 63
    expr  go to state 119


State 91

   67 expr: expr "<=" . expr

    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "nil"          shift, and go to state 52
    "tail"         shift, and go to state 53
    "head"         shift, and go to state 54
    "nil?"         shift, and go to state 55
    "not"          shift, and go to state 56
    T_constInt     shift, and go to state 57
    T_var          shift, and go to state 34
    T_constChar    shift, and go to state 58
    T_constString  shift, and go to state 35
    '+'            shift, and go to state 59
    '-'            shift, and go to state 60
    '('            shift, and go to state 61

    call  go to state 62
    atom  go to state 63
    expr  go to state 120


State 92

   66 expr: expr "<>" . expr

    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "nil"          shift, and go to state 52
    "tail"         shift, and go to state 53
    "head"         shift, and go to state 54
    "nil?"         shift, and go to state 55
    "not"          shift, and go to state 56
    T_constInt     shift, and go to state 57
    T_var          shift, and go to state 34
    T_constChar    shift, and go to state 58
    T_constString  shift, and go to state 35
    '+'            shift, and go to state 59
    '-'            shift, and go to state 60
    '('            shift, and go to state 61

    call  go to state 62
    atom  go to state 63
    expr  go to state 121


State 93

   63 expr: expr '=' . expr

    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "nil"          shift, and go to state 52
    "tail"         shift, and go to state 53
    "head"         shift, and go to state 54
    "nil?"         shift, and go to state 55
    "not"          shift, and go to state 56
    T_constInt     shift, and go to state 57
    T_var          shift, and go to state 34
    T_constChar    shift, and go to state 58
    T_constString  shift, and go to state 35
    '+'            shift, and go to state 59
    '-'            shift, and go to state 60
    '('            shift, and go to state 61

    call  go to state 62
    atom  go to state 63
    expr  go to state 122


State 94

   64 expr: expr '>' . expr

    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "nil"          shift, and go to state 52
    "tail"         shift, and go to state 53
    "head"         shift, and go to state 54
    "nil?"         shift, and go to state 55
    "not"          shift, and go to state 56
    T_constInt     shift, and go to state 57
    T_var          shift, and go to state 34
    T_constChar    shift, and go to state 58
    T_constString  shift, and go to state 35
    '+'            shift, and go to state 59
    '-'            shift, and go to state 60
    '('            shift, and go to state 61

    call  go to state 62
    atom  go to state 63
    expr  go to state 123


State 95

   65 expr: expr '<' . expr

    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "nil"          shift, and go to state 52
    "tail"         shift, and go to state 53
    "head"         shift, and go to state 54
    "nil?"         shift, and go to state 55
    "not"          shift, and go to state 56
    T_constInt     shift, and go to state 57
    T_var          shift, and go to state 34
    T_constChar    shift, and go to state 58
    T_constString  shift, and go to state 35
    '+'            shift, and go to state 59
    '-'            shift, and go to state 60
    '('            shift, and go to state 61

    call  go to state 62
    atom  go to state 63
    expr  go to state 124


State 96

   76 expr: expr '#' . expr

    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "nil"          shift, and go to state 52
    "tail"         shift, and go to state 53
    "head"         shift, and go to state 54
    "nil?"         shift, and go to state 55
    "not"          shift, and go to state 56
    T_constInt     shift, and go to state 57
    T_var          shift, and go to state 34
    T_constChar    shift, and go to state 58
    T_constString  shift, and go to state 35
    '+'            shift, and go to state 59
    '-'            shift, and go to state 60
    '('            shift, and go to state 61

    call  go to state 62
    atom  go to state 63
    expr  go to state 125


State 97

   58 expr: expr '+' . expr

    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "nil"          shift, and go to state 52
    "tail"         shift, and go to state 53
    "head"         shift, and go to state 54
    "nil?"         shift, and go to state 55
    "not"          shift, and go to state 56
    T_constInt     shift, and go to state 57
    T_var          shift, and go to state 34
    T_constChar    shift, and go to state 58
    T_constString  shift, and go to state 35
    '+'            shift, and go to state 59
    '-'            shift, and go to state 60
    '('            shift, and go to state 61

    call  go to state 62
    atom  go to state 63
    expr  go to state 126


State 98

   59 expr: expr '-' . expr

    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "nil"          shift, and go to state 52
    "tail"         shift, and go to state 53
    "head"         shift, and go to state 54
    "nil?"         shift, and go to state 55
    "not"          shift, and go to state 56
    T_constInt     shift, and go to state 57
    T_var          shift, and go to state 34
    T_constChar    shift, and go to state 58
    T_constString  shift, and go to state 35
    '+'            shift, and go to state 59
    '-'            shift, and go to state 60
    '('            shift, and go to state 61

    call  go to state 62
    atom  go to state 63
    expr  go to state 127


State 99

   60 expr: expr '*' . expr

    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "nil"          shift, and go to state 52
    "tail"         shift, and go to state 53
    "head"         shift, and go to state 54
    "nil?"         shift, and go to state 55
    "not"          shift, and go to state 56
    T_constInt     shift, and go to state 57
    T_var          shift, and go to state 34
    T_constChar    shift, and go to state 58
    T_constString  shift, and go to state 35
    '+'            shift, and go to state 59
    '-'            shift, and go to state 60
    '('            shift, and go to state 61

    call  go to state 62
    atom  go to state 63
    expr  go to state 128


State 100

   61 expr: expr '/' . expr

    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "nil"          shift, and go to state 52
    "tail"         shift, and go to state 53
    "head"         shift, and go to state 54
    "nil?"         shift, and go to state 55
    "not"          shift, and go to state 56
    T_constInt     shift, and go to state 57
    T_var          shift, and go to state 34
    T_constChar    shift, and go to state 58
    T_constString  shift, and go to state 35
    '+'            shift, and go to state 59
    '-'            shift, and go to state 60
    '('            shift, and go to state 61

    call  go to state 62
    atom  go to state 63
    expr  go to state 129


State 101

   12 header_decl: T_var '(' . formal_list ')'

    ')'       reduce using rule 14 (formal_list)
    $default  reduce using rule 16 (formal_head)

    formal_list  go to state 130
    formal_head  go to state 19


State 102

   13 header_decl: type T_var . '(' formal_list ')'

    '('  shift, and go to state 131


State 103

   32 stmt: "for" simple_list ';' . expr ';' simple_list ':' stmt_list "end"

    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "nil"          shift, and go to state 52
    "tail"         shift, and go to state 53
    "head"         shift, and go to state 54
    "nil?"         shift, and go to state 55
    "not"          shift, and go to state 56
    T_constInt     shift, and go to state 57
    T_var          shift, and go to state 34
    T_constChar    shift, and go to state 58
    T_constString  shift, and go to state 35
    '+'            shift, and go to state 59
    '-'            shift, and go to state 60
    '('            shift, and go to state 61

    call  go to state 62
    atom  go to state 63
    expr  go to state 132


State 104

   42 simple_list: simple_list ',' . simple

    "skip"         shift, and go to state 30
    T_var          shift, and go to state 34
    T_constString  shift, and go to state 35

    simple  go to state 133
    call    go to state 43
    atom    go to state 44


State 105

   31 stmt: "if" expr ':' . stmt_list elsif_list "end"

    "exit"         shift, and go to state 28
    "return"       shift, and go to state 29
    "skip"         shift, and go to state 30
    "for"          shift, and go to state 32
    "if"           shift, and go to state 33
    T_var          shift, and go to state 34
    T_constString  shift, and go to state 35

    stmt_list  go to state 134
    stmt       go to state 41
    simple     go to state 42
    call       go to state 43
    atom       go to state 44


State 106

   43 call: T_var '(' expr_list . ')'

    ')'  shift, and go to state 135


State 107

   45 expr_list: expr_head . expr
   47 expr_head: expr_head . expr ','

    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "nil"          shift, and go to state 52
    "tail"         shift, and go to state 53
    "head"         shift, and go to state 54
    "nil?"         shift, and go to state 55
    "not"          shift, and go to state 56
    T_constInt     shift, and go to state 57
    T_var          shift, and go to state 34
    T_constChar    shift, and go to state 58
    T_constString  shift, and go to state 35
    '+'            shift, and go to state 59
    '-'            shift, and go to state 60
    '('            shift, and go to state 61

    call  go to state 62
    atom  go to state 63
    expr  go to state 136


State 108

   50 atom: T_var '[' expr . ']'
   58 expr: expr . '+' expr
   59     | expr . '-' expr
   60     | expr . '*' expr
   61     | expr . '/' expr
   62     | expr . "mod" expr
   63     | expr . '=' expr
   64     | expr . '>' expr
   65     | expr . '<' expr
   66     | expr . "<>" expr
   67     | expr . "<=" expr
   68     | expr . ">=" expr
   72     | expr . "and" expr
   73     | expr . "or" expr
   76     | expr . '#' expr

    "and"  shift, and go to state 87
    "mod"  shift, and go to state 88
    "or"   shift, and go to state 89
    ">="   shift, and go to state 90
    "<="   shift, and go to state 91
    "<>"   shift, and go to state 92
    '='    shift, and go to state 93
    '>'    shift, and go to state 94
    '<'    shift, and go to state 95
    '#'    shift, and go to state 96
    '+'    shift, and go to state 97
    '-'    shift, and go to state 98
    '*'    shift, and go to state 99
    '/'    shift, and go to state 100
    ']'    shift, and go to state 137


State 109

   39 simple: atom ":=" "new" . type '[' expr ']'

    "list"  shift, and go to state 4
    "bool"  shift, and go to state 5
    "char"  shift, and go to state 6
    "int"   shift, and go to state 7

    type  go to state 138


State 110

   38 simple: atom ":=" expr .
   58 expr: expr . '+' expr
   59     | expr . '-' expr
   60     | expr . '*' expr
   61     | expr . '/' expr
   62     | expr . "mod" expr
   63     | expr . '=' expr
   64     | expr . '>' expr
   65     | expr . '<' expr
   66     | expr . "<>" expr
   67     | expr . "<=" expr
   68     | expr . ">=" expr
   72     | expr . "and" expr
   73     | expr . "or" expr
   76     | expr . '#' expr

    "and"  shift, and go to state 87
    "mod"  shift, and go to state 88
    "or"   shift, and go to state 89
    ">="   shift, and go to state 90
    "<="   shift, and go to state 91
    "<>"   shift, and go to state 92
    '='    shift, and go to state 93
    '>'    shift, and go to state 94
    '<'    shift, and go to state 95
    '#'    shift, and go to state 96
    '+'    shift, and go to state 97
    '-'    shift, and go to state 98
    '*'    shift, and go to state 99
    '/'    shift, and go to state 100

    $default  reduce using rule 38 (simple)


State 111

   21 var_list: var_list ',' T_var .

    $default  reduce using rule 21 (var_list)


State 112

   58 expr: expr . '+' expr
   59     | expr . '-' expr
   60     | expr . '*' expr
   61     | expr . '/' expr
   62     | expr . "mod" expr
   63     | expr . '=' expr
   64     | expr . '>' expr
   65     | expr . '<' expr
   66     | expr . "<>" expr
   67     | expr . "<=" expr
   68     | expr . ">=" expr
   72     | expr . "and" expr
   73     | expr . "or" expr
   76     | expr . '#' expr
   78     | "tail" '(' expr . ')'

    "and"  shift, and go to state 87
    "mod"  shift, and go to state 88
    "or"   shift, and go to state 89
    ">="   shift, and go to state 90
    "<="   shift, and go to state 91
    "<>"   shift, and go to state 92
    '='    shift, and go to state 93
    '>'    shift, and go to state 94
    '<'    shift, and go to state 95
    '#'    shift, and go to state 96
    '+'    shift, and go to state 97
    '-'    shift, and go to state 98
    '*'    shift, and go to state 99
    '/'    shift, and go to state 100
    ')'    shift, and go to state 139


State 113

   58 expr: expr . '+' expr
   59     | expr . '-' expr
   60     | expr . '*' expr
   61     | expr . '/' expr
   62     | expr . "mod" expr
   63     | expr . '=' expr
   64     | expr . '>' expr
   65     | expr . '<' expr
   66     | expr . "<>" expr
   67     | expr . "<=" expr
   68     | expr . ">=" expr
   72     | expr . "and" expr
   73     | expr . "or" expr
   76     | expr . '#' expr
   77     | "head" '(' expr . ')'

    "and"  shift, and go to state 87
    "mod"  shift, and go to state 88
    "or"   shift, and go to state 89
    ">="   shift, and go to state 90
    "<="   shift, and go to state 91
    "<>"   shift, and go to state 92
    '='    shift, and go to state 93
    '>'    shift, and go to state 94
    '<'    shift, and go to state 95
    '#'    shift, and go to state 96
    '+'    shift, and go to state 97
    '-'    shift, and go to state 98
    '*'    shift, and go to state 99
    '/'    shift, and go to state 100
    ')'    shift, and go to state 140


State 114

   58 expr: expr . '+' expr
   59     | expr . '-' expr
   60     | expr . '*' expr
   61     | expr . '/' expr
   62     | expr . "mod" expr
   63     | expr . '=' expr
   64     | expr . '>' expr
   65     | expr . '<' expr
   66     | expr . "<>" expr
   67     | expr . "<=" expr
   68     | expr . ">=" expr
   72     | expr . "and" expr
   73     | expr . "or" expr
   75     | "nil?" '(' expr . ')'
   76     | expr . '#' expr

    "and"  shift, and go to state 87
    "mod"  shift, and go to state 88
    "or"   shift, and go to state 89
    ">="   shift, and go to state 90
    "<="   shift, and go to state 91
    "<>"   shift, and go to state 92
    '='    shift, and go to state 93
    '>'    shift, and go to state 94
    '<'    shift, and go to state 95
    '#'    shift, and go to state 96
    '+'    shift, and go to state 97
    '-'    shift, and go to state 98
    '*'    shift, and go to state 99
    '/'    shift, and go to state 100
    ')'    shift, and go to state 141


State 115

   55 expr: '(' expr ')' .

    $default  reduce using rule 55 (expr)


State 116

   58 expr: expr . '+' expr
   59     | expr . '-' expr
   60     | expr . '*' expr
   61     | expr . '/' expr
   62     | expr . "mod" expr
   63     | expr . '=' expr
   64     | expr . '>' expr
   65     | expr . '<' expr
   66     | expr . "<>" expr
   67     | expr . "<=" expr
   68     | expr . ">=" expr
   72     | expr . "and" expr
   72     | expr "and" expr .
   73     | expr . "or" expr
   76     | expr . '#' expr

    "mod"  shift, and go to state 88
    ">="   shift, and go to state 90
    "<="   shift, and go to state 91
    "<>"   shift, and go to state 92
    '='    shift, and go to state 93
    '>'    shift, and go to state 94
    '<'    shift, and go to state 95
    '#'    shift, and go to state 96
    '+'    shift, and go to state 97
    '-'    shift, and go to state 98
    '*'    shift, and go to state 99
    '/'    shift, and go to state 100

    $default  reduce using rule 72 (expr)


State 117

   58 expr: expr . '+' expr
   59     | expr . '-' expr
   60     | expr . '*' expr
   61     | expr . '/' expr
   62     | expr . "mod" expr
   62     | expr "mod" expr .
   63     | expr . '=' expr
   64     | expr . '>' expr
   65     | expr . '<' expr
   66     | expr . "<>" expr
   67     | expr . "<=" expr
   68     | expr . ">=" expr
   72     | expr . "and" expr
   73     | expr . "or" expr
   76     | expr . '#' expr

    $default  reduce using rule 62 (expr)


State 118

   58 expr: expr . '+' expr
   59     | expr . '-' expr
   60     | expr . '*' expr
   61     | expr . '/' expr
   62     | expr . "mod" expr
   63     | expr . '=' expr
   64     | expr . '>' expr
   65     | expr . '<' expr
   66     | expr . "<>" expr
   67     | expr . "<=" expr
   68     | expr . ">=" expr
   72     | expr . "and" expr
   73     | expr . "or" expr
   73     | expr "or" expr .
   76     | expr . '#' expr

    "and"  shift, and go to state 87
    "mod"  shift, and go to state 88
    ">="   shift, and go to state 90
    "<="   shift, and go to state 91
    "<>"   shift, and go to state 92
    '='    shift, and go to state 93
    '>'    shift, and go to state 94
    '<'    shift, and go to state 95
    '#'    shift, and go to state 96
    '+'    shift, and go to state 97
    '-'    shift, and go to state 98
    '*'    shift, and go to state 99
    '/'    shift, and go to state 100

    $default  reduce using rule 73 (expr)


State 119

   58 expr: expr . '+' expr
   59     | expr . '-' expr
   60     | expr . '*' expr
   61     | expr . '/' expr
   62     | expr . "mod" expr
   63     | expr . '=' expr
   64     | expr . '>' expr
   65     | expr . '<' expr
   66     | expr . "<>" expr
   67     | expr . "<=" expr
   68     | expr . ">=" expr
   68     | expr ">=" expr .
   72     | expr . "and" expr
   73     | expr . "or" expr
   76     | expr . '#' expr

    "mod"  shift, and go to state 88
    '#'    shift, and go to state 96
    '+'    shift, and go to state 97
    '-'    shift, and go to state 98
    '*'    shift, and go to state 99
    '/'    shift, and go to state 100

    ">="  error (nonassociative)
    "<="  error (nonassociative)
    "<>"  error (nonassociative)
    '='   error (nonassociative)
    '>'   error (nonassociative)
    '<'   error (nonassociative)

    $default  reduce using rule 68 (expr)


State 120

   58 expr: expr . '+' expr
   59     | expr . '-' expr
   60     | expr . '*' expr
   61     | expr . '/' expr
   62     | expr . "mod" expr
   63     | expr . '=' expr
   64     | expr . '>' expr
   65     | expr . '<' expr
   66     | expr . "<>" expr
   67     | expr . "<=" expr
   67     | expr "<=" expr .
   68     | expr . ">=" expr
   72     | expr . "and" expr
   73     | expr . "or" expr
   76     | expr . '#' expr

    "mod"  shift, and go to state 88
    '#'    shift, and go to state 96
    '+'    shift, and go to state 97
    '-'    shift, and go to state 98
    '*'    shift, and go to state 99
    '/'    shift, and go to state 100

    ">="  error (nonassociative)
    "<="  error (nonassociative)
    "<>"  error (nonassociative)
    '='   error (nonassociative)
    '>'   error (nonassociative)
    '<'   error (nonassociative)

    $default  reduce using rule 67 (expr)


State 121

   58 expr: expr . '+' expr
   59     | expr . '-' expr
   60     | expr . '*' expr
   61     | expr . '/' expr
   62     | expr . "mod" expr
   63     | expr . '=' expr
   64     | expr . '>' expr
   65     | expr . '<' expr
   66     | expr . "<>" expr
   66     | expr "<>" expr .
   67     | expr . "<=" expr
   68     | expr . ">=" expr
   72     | expr . "and" expr
   73     | expr . "or" expr
   76     | expr . '#' expr

    "mod"  shift, and go to state 88
    '#'    shift, and go to state 96
    '+'    shift, and go to state 97
    '-'    shift, and go to state 98
    '*'    shift, and go to state 99
    '/'    shift, and go to state 100

    ">="  error (nonassociative)
    "<="  error (nonassociative)
    "<>"  error (nonassociative)
    '='   error (nonassociative)
    '>'   error (nonassociative)
    '<'   error (nonassociative)

    $default  reduce using rule 66 (expr)


State 122

   58 expr: expr . '+' expr
   59     | expr . '-' expr
   60     | expr . '*' expr
   61     | expr . '/' expr
   62     | expr . "mod" expr
   63     | expr . '=' expr
   63     | expr '=' expr .
   64     | expr . '>' expr
   65     | expr . '<' expr
   66     | expr . "<>" expr
   67     | expr . "<=" expr
   68     | expr . ">=" expr
   72     | expr . "and" expr
   73     | expr . "or" expr
   76     | expr . '#' expr

    "mod"  shift, and go to state 88
    '#'    shift, and go to state 96
    '+'    shift, and go to state 97
    '-'    shift, and go to state 98
    '*'    shift, and go to state 99
    '/'    shift, and go to state 100

    ">="  error (nonassociative)
    "<="  error (nonassociative)
    "<>"  error (nonassociative)
    '='   error (nonassociative)
    '>'   error (nonassociative)
    '<'   error (nonassociative)

    $default  reduce using rule 63 (expr)


State 123

   58 expr: expr . '+' expr
   59     | expr . '-' expr
   60     | expr . '*' expr
   61     | expr . '/' expr
   62     | expr . "mod" expr
   63     | expr . '=' expr
   64     | expr . '>' expr
   64     | expr '>' expr .
   65     | expr . '<' expr
   66     | expr . "<>" expr
   67     | expr . "<=" expr
   68     | expr . ">=" expr
   72     | expr . "and" expr
   73     | expr . "or" expr
   76     | expr . '#' expr

    "mod"  shift, and go to state 88
    '#'    shift, and go to state 96
    '+'    shift, and go to state 97
    '-'    shift, and go to state 98
    '*'    shift, and go to state 99
    '/'    shift, and go to state 100

    ">="  error (nonassociative)
    "<="  error (nonassociative)
    "<>"  error (nonassociative)
    '='   error (nonassociative)
    '>'   error (nonassociative)
    '<'   error (nonassociative)

    $default  reduce using rule 64 (expr)


State 124

   58 expr: expr . '+' expr
   59     | expr . '-' expr
   60     | expr . '*' expr
   61     | expr . '/' expr
   62     | expr . "mod" expr
   63     | expr . '=' expr
   64     | expr . '>' expr
   65     | expr . '<' expr
   65     | expr '<' expr .
   66     | expr . "<>" expr
   67     | expr . "<=" expr
   68     | expr . ">=" expr
   72     | expr . "and" expr
   73     | expr . "or" expr
   76     | expr . '#' expr

    "mod"  shift, and go to state 88
    '#'    shift, and go to state 96
    '+'    shift, and go to state 97
    '-'    shift, and go to state 98
    '*'    shift, and go to state 99
    '/'    shift, and go to state 100

    ">="  error (nonassociative)
    "<="  error (nonassociative)
    "<>"  error (nonassociative)
    '='   error (nonassociative)
    '>'   error (nonassociative)
    '<'   error (nonassociative)

    $default  reduce using rule 65 (expr)


State 125

   58 expr: expr . '+' expr
   59     | expr . '-' expr
   60     | expr . '*' expr
   61     | expr . '/' expr
   62     | expr . "mod" expr
   63     | expr . '=' expr
   64     | expr . '>' expr
   65     | expr . '<' expr
   66     | expr . "<>" expr
   67     | expr . "<=" expr
   68     | expr . ">=" expr
   72     | expr . "and" expr
   73     | expr . "or" expr
   76     | expr . '#' expr
   76     | expr '#' expr .

    "mod"  shift, and go to state 88
    '#'    shift, and go to state 96
    '+'    shift, and go to state 97
    '-'    shift, and go to state 98
    '*'    shift, and go to state 99
    '/'    shift, and go to state 100

    $default  reduce using rule 76 (expr)


State 126

   58 expr: expr . '+' expr
   58     | expr '+' expr .
   59     | expr . '-' expr
   60     | expr . '*' expr
   61     | expr . '/' expr
   62     | expr . "mod" expr
   63     | expr . '=' expr
   64     | expr . '>' expr
   65     | expr . '<' expr
   66     | expr . "<>" expr
   67     | expr . "<=" expr
   68     | expr . ">=" expr
   72     | expr . "and" expr
   73     | expr . "or" expr
   76     | expr . '#' expr

    "mod"  shift, and go to state 88
    '*'    shift, and go to state 99
    '/'    shift, and go to state 100

    $default  reduce using rule 58 (expr)


State 127

   58 expr: expr . '+' expr
   59     | expr . '-' expr
   59     | expr '-' expr .
   60     | expr . '*' expr
   61     | expr . '/' expr
   62     | expr . "mod" expr
   63     | expr . '=' expr
   64     | expr . '>' expr
   65     | expr . '<' expr
   66     | expr . "<>" expr
   67     | expr . "<=" expr
   68     | expr . ">=" expr
   72     | expr . "and" expr
   73     | expr . "or" expr
   76     | expr . '#' expr

    "mod"  shift, and go to state 88
    '*'    shift, and go to state 99
    '/'    shift, and go to state 100

    $default  reduce using rule 59 (expr)


State 128

   58 expr: expr . '+' expr
   59     | expr . '-' expr
   60     | expr . '*' expr
   60     | expr '*' expr .
   61     | expr . '/' expr
   62     | expr . "mod" expr
   63     | expr . '=' expr
   64     | expr . '>' expr
   65     | expr . '<' expr
   66     | expr . "<>" expr
   67     | expr . "<=" expr
   68     | expr . ">=" expr
   72     | expr . "and" expr
   73     | expr . "or" expr
   76     | expr . '#' expr

    $default  reduce using rule 60 (expr)


State 129

   58 expr: expr . '+' expr
   59     | expr . '-' expr
   60     | expr . '*' expr
   61     | expr . '/' expr
   61     | expr '/' expr .
   62     | expr . "mod" expr
   63     | expr . '=' expr
   64     | expr . '>' expr
   65     | expr . '<' expr
   66     | expr . "<>" expr
   67     | expr . "<=" expr
   68     | expr . ">=" expr
   72     | expr . "and" expr
   73     | expr . "or" expr
   76     | expr . '#' expr

    $default  reduce using rule 61 (expr)


State 130

   12 header_decl: T_var '(' formal_list . ')'

    ')'  shift, and go to state 142


State 131

   13 header_decl: type T_var '(' . formal_list ')'

    ')'       reduce using rule 14 (formal_list)
    $default  reduce using rule 16 (formal_head)

    formal_list  go to state 143
    formal_head  go to state 19


State 132

   32 stmt: "for" simple_list ';' expr . ';' simple_list ':' stmt_list "end"
   58 expr: expr . '+' expr
   59     | expr . '-' expr
   60     | expr . '*' expr
   61     | expr . '/' expr
   62     | expr . "mod" expr
   63     | expr . '=' expr
   64     | expr . '>' expr
   65     | expr . '<' expr
   66     | expr . "<>" expr
   67     | expr . "<=" expr
   68     | expr . ">=" expr
   72     | expr . "and" expr
   73     | expr . "or" expr
   76     | expr . '#' expr

    "and"  shift, and go to state 87
    "mod"  shift, and go to state 88
    "or"   shift, and go to state 89
    ">="   shift, and go to state 90
    "<="   shift, and go to state 91
    "<>"   shift, and go to state 92
    '='    shift, and go to state 93
    '>'    shift, and go to state 94
    '<'    shift, and go to state 95
    '#'    shift, and go to state 96
    '+'    shift, and go to state 97
    '-'    shift, and go to state 98
    '*'    shift, and go to state 99
    '/'    shift, and go to state 100
    ';'    shift, and go to state 144


State 133

   42 simple_list: simple_list ',' simple .

    $default  reduce using rule 42 (simple_list)


State 134

    9 stmt_list: stmt_list . stmt
   31 stmt: "if" expr ':' stmt_list . elsif_list "end"

    "exit"         shift, and go to state 28
    "return"       shift, and go to state 29
    "skip"         shift, and go to state 30
    "for"          shift, and go to state 32
    "if"           shift, and go to state 33
    "else"         shift, and go to state 145
    "elsif"        shift, and go to state 146
    T_var          shift, and go to state 34
    T_constString  shift, and go to state 35

    $default  reduce using rule 35 (else)

    stmt        go to state 74
    elsif_list  go to state 147
    else        go to state 148
    simple      go to state 42
    call        go to state 43
    atom        go to state 44


State 135

   43 call: T_var '(' expr_list ')' .

    $default  reduce using rule 43 (call)


State 136

   45 expr_list: expr_head expr .
   47 expr_head: expr_head expr . ','
   58 expr: expr . '+' expr
   59     | expr . '-' expr
   60     | expr . '*' expr
   61     | expr . '/' expr
   62     | expr . "mod" expr
   63     | expr . '=' expr
   64     | expr . '>' expr
   65     | expr . '<' expr
   66     | expr . "<>" expr
   67     | expr . "<=" expr
   68     | expr . ">=" expr
   72     | expr . "and" expr
   73     | expr . "or" expr
   76     | expr . '#' expr

    "and"  shift, and go to state 87
    "mod"  shift, and go to state 88
    "or"   shift, and go to state 89
    ">="   shift, and go to state 90
    "<="   shift, and go to state 91
    "<>"   shift, and go to state 92
    '='    shift, and go to state 93
    '>'    shift, and go to state 94
    '<'    shift, and go to state 95
    '#'    shift, and go to state 96
    '+'    shift, and go to state 97
    '-'    shift, and go to state 98
    '*'    shift, and go to state 99
    '/'    shift, and go to state 100
    ','    shift, and go to state 149

    $default  reduce using rule 45 (expr_list)


State 137

   50 atom: T_var '[' expr ']' .

    $default  reduce using rule 50 (atom)


State 138

   25 type: type . '[' ']'
   39 simple: atom ":=" "new" type . '[' expr ']'

    '['  shift, and go to state 150


State 139

   78 expr: "tail" '(' expr ')' .

    $default  reduce using rule 78 (expr)


State 140

   77 expr: "head" '(' expr ')' .

    $default  reduce using rule 77 (expr)


State 141

   75 expr: "nil?" '(' expr ')' .

    $default  reduce using rule 75 (expr)


State 142

   12 header_decl: T_var '(' formal_list ')' .

    $default  reduce using rule 12 (header_decl)


State 143

   13 header_decl: type T_var '(' formal_list . ')'

    ')'  shift, and go to state 151


State 144

   32 stmt: "for" simple_list ';' expr ';' . simple_list ':' stmt_list "end"

    "skip"         shift, and go to state 30
    T_var          shift, and go to state 34
    T_constString  shift, and go to state 35

    simple       go to state 68
    simple_list  go to state 152
    call         go to state 43
    atom         go to state 44


State 145

   36 else: "else" . ':' stmt_list

    ':'  shift, and go to state 153


State 146

   34 elsif_list: "elsif" . expr ':' stmt_list elsif_list

    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "nil"          shift, and go to state 52
    "tail"         shift, and go to state 53
    "head"         shift, and go to state 54
    "nil?"         shift, and go to state 55
    "not"          shift, and go to state 56
    T_constInt     shift, and go to state 57
    T_var          shift, and go to state 34
    T_constChar    shift, and go to state 58
    T_constString  shift, and go to state 35
    '+'            shift, and go to state 59
    '-'            shift, and go to state 60
    '('            shift, and go to state 61

    call  go to state 62
    atom  go to state 63
    expr  go to state 154


State 147

   31 stmt: "if" expr ':' stmt_list elsif_list . "end"

    "end"  shift, and go to state 155


State 148

   33 elsif_list: else .

    $default  reduce using rule 33 (elsif_list)


State 149

   47 expr_head: expr_head expr ',' .

    $default  reduce using rule 47 (expr_head)


State 150

   25 type: type '[' . ']'
   39 simple: atom ":=" "new" type '[' . expr ']'

    "false"        shift, and go to state 50
    "true"         shift, and go to state 51
    "nil"          shift, and go to state 52
    "tail"         shift, and go to state 53
    "head"         shift, and go to state 54
    "nil?"         shift, and go to state 55
    "not"          shift, and go to state 56
    T_constInt     shift, and go to state 57
    T_var          shift, and go to state 34
    T_constChar    shift, and go to state 58
    T_constString  shift, and go to state 35
    '+'            shift, and go to state 59
    '-'            shift, and go to state 60
    '('            shift, and go to state 61
    ']'            shift, and go to state 22

    call  go to state 62
    atom  go to state 63
    expr  go to state 156


State 151

   13 header_decl: type T_var '(' formal_list ')' .

    $default  reduce using rule 13 (header_decl)


State 152

   32 stmt: "for" simple_list ';' expr ';' simple_list . ':' stmt_list "end"
   42 simple_list: simple_list . ',' simple

    ':'  shift, and go to state 157
    ','  shift, and go to state 104


State 153

   36 else: "else" ':' . stmt_list

    "exit"         shift, and go to state 28
    "return"       shift, and go to state 29
    "skip"         shift, and go to state 30
    "for"          shift, and go to state 32
    "if"           shift, and go to state 33
    T_var          shift, and go to state 34
    T_constString  shift, and go to state 35

    stmt_list  go to state 158
    stmt       go to state 41
    simple     go to state 42
    call       go to state 43
    atom       go to state 44


State 154

   34 elsif_list: "elsif" expr . ':' stmt_list elsif_list
   58 expr: expr . '+' expr
   59     | expr . '-' expr
   60     | expr . '*' expr
   61     | expr . '/' expr
   62     | expr . "mod" expr
   63     | expr . '=' expr
   64     | expr . '>' expr
   65     | expr . '<' expr
   66     | expr . "<>" expr
   67     | expr . "<=" expr
   68     | expr . ">=" expr
   72     | expr . "and" expr
   73     | expr . "or" expr
   76     | expr . '#' expr

    "and"  shift, and go to state 87
    "mod"  shift, and go to state 88
    "or"   shift, and go to state 89
    ">="   shift, and go to state 90
    "<="   shift, and go to state 91
    "<>"   shift, and go to state 92
    '='    shift, and go to state 93
    '>'    shift, and go to state 94
    '<'    shift, and go to state 95
    '#'    shift, and go to state 96
    '+'    shift, and go to state 97
    '-'    shift, and go to state 98
    '*'    shift, and go to state 99
    '/'    shift, and go to state 100
    ':'    shift, and go to state 159


State 155

   31 stmt: "if" expr ':' stmt_list elsif_list "end" .

    $default  reduce using rule 31 (stmt)


State 156

   39 simple: atom ":=" "new" type '[' expr . ']'
   58 expr: expr . '+' expr
   59     | expr . '-' expr
   60     | expr . '*' expr
   61     | expr . '/' expr
   62     | expr . "mod" expr
   63     | expr . '=' expr
   64     | expr . '>' expr
   65     | expr . '<' expr
   66     | expr . "<>" expr
   67     | expr . "<=" expr
   68     | expr . ">=" expr
   72     | expr . "and" expr
   73     | expr . "or" expr
   76     | expr . '#' expr

    "and"  shift, and go to state 87
    "mod"  shift, and go to state 88
    "or"   shift, and go to state 89
    ">="   shift, and go to state 90
    "<="   shift, and go to state 91
    "<>"   shift, and go to state 92
    '='    shift, and go to state 93
    '>'    shift, and go to state 94
    '<'    shift, and go to state 95
    '#'    shift, and go to state 96
    '+'    shift, and go to state 97
    '-'    shift, and go to state 98
    '*'    shift, and go to state 99
    '/'    shift, and go to state 100
    ']'    shift, and go to state 160


State 157

   32 stmt: "for" simple_list ';' expr ';' simple_list ':' . stmt_list "end"

    "exit"         shift, and go to state 28
    "return"       shift, and go to state 29
    "skip"         shift, and go to state 30
    "for"          shift, and go to state 32
    "if"           shift, and go to state 33
    T_var          shift, and go to state 34
    T_constString  shift, and go to state 35

    stmt_list  go to state 161
    stmt       go to state 41
    simple     go to state 42
    call       go to state 43
    atom       go to state 44


State 158

    9 stmt_list: stmt_list . stmt
   36 else: "else" ':' stmt_list .

    "exit"         shift, and go to state 28
    "return"       shift, and go to state 29
    "skip"         shift, and go to state 30
    "for"          shift, and go to state 32
    "if"           shift, and go to state 33
    T_var          shift, and go to state 34
    T_constString  shift, and go to state 35

    $default  reduce using rule 36 (else)

    stmt    go to state 74
    simple  go to state 42
    call    go to state 43
    atom    go to state 44


State 159

   34 elsif_list: "elsif" expr ':' . stmt_list elsif_list

    "exit"         shift, and go to state 28
    "return"       shift, and go to state 29
    "skip"         shift, and go to state 30
    "for"          shift, and go to state 32
    "if"           shift, and go to state 33
    T_var          shift, and go to state 34
    T_constString  shift, and go to state 35

    stmt_list  go to state 162
    stmt       go to state 41
    simple     go to state 42
    call       go to state 43
    atom       go to state 44


State 160

   39 simple: atom ":=" "new" type '[' expr ']' .

    $default  reduce using rule 39 (simple)


State 161

    9 stmt_list: stmt_list . stmt
   32 stmt: "for" simple_list ';' expr ';' simple_list ':' stmt_list . "end"

    "end"          shift, and go to state 163
    "exit"         shift, and go to state 28
    "return"       shift, and go to state 29
    "skip"         shift, and go to state 30
    "for"          shift, and go to state 32
    "if"           shift, and go to state 33
    T_var          shift, and go to state 34
    T_constString  shift, and go to state 35

    stmt    go to state 74
    simple  go to state 42
    call    go to state 43
    atom    go to state 44


State 162

    9 stmt_list: stmt_list . stmt
   34 elsif_list: "elsif" expr ':' stmt_list . elsif_list

    "exit"         shift, and go to state 28
    "return"       shift, and go to state 29
    "skip"         shift, and go to state 30
    "for"          shift, and go to state 32
    "if"           shift, and go to state 33
    "else"         shift, and go to state 145
    "elsif"        shift, and go to state 146
    T_var          shift, and go to state 34
    T_constString  shift, and go to state 35

    $default  reduce using rule 35 (else)

    stmt        go to state 74
    elsif_list  go to state 164
    else        go to state 148
    simple      go to state 42
    call        go to state 43
    atom        go to state 44


State 163

   32 stmt: "for" simple_list ';' expr ';' simple_list ':' stmt_list "end" .

    $default  reduce using rule 32 (stmt)


State 164

   34 elsif_list: "elsif" expr ':' stmt_list elsif_list .

    $default  reduce using rule 34 (elsif_list)
