Grammar

    0 $accept: program $end

    1 program: func_def

    2 func_def: "def" header ':' definition_list stmt_list "end"

    3 definition_list: %empty
    4                | func_def definition_list
    5                | func_decl definition_list
    6                | var_def definition_list

    7 stmt_list: stmt
    8          | stmt stmt_list

    9 header: T_var '(' formal_list ')'
   10       | type T_var '(' formal_list ')'

   11 formal_list: %empty
   12            | formal formal_tail

   13 formal_tail: %empty
   14            | ';' formal formal_tail

   15 formal: type var_list
   16       | "ref" type var_list

   17 var_list: T_var
   18         | T_var ',' var_list

   19 type: "int"
   20     | "bool"
   21     | "char"
   22     | type '[' ']'
   23     | "list" '[' type ']'

   24 func_decl: "decl" header

   25 var_def: type var_list

   26 stmt: simple
   27     | "exit"
   28     | "return" expr
   29     | "if" expr ':' stmt_list elsif_list else "end"
   30     | "for" simple_list ';' expr ';' simple_list ':' stmt_list "end"

   31 elsif_list: %empty
   32           | "elsif" expr ':' stmt_list elsif_list

   33 else: %empty
   34     | "else" ':' stmt_list

   35 simple: "skip"
   36       | atom ":=" expr
   37       | call

   38 simple_list: simple
   39            | simple ',' simple_list

   40 call: T_var '(' expr_list ')'

   41 expr_list: %empty
   42          | expr expr_tail

   43 expr_tail: %empty
   44          | ',' expr expr_tail

   45 atom: T_var
   46     | T_constString
   47     | atom '[' expr ']'
   48     | call

   49 expr: atom
   50     | T_constInt
   51     | T_constChar
   52     | '(' expr ')'
   53     | '+' expr
   54     | '-' expr
   55     | expr '+' expr
   56     | expr '-' expr
   57     | expr '*' expr
   58     | expr '/' expr
   59     | expr "mod" expr
   60     | expr '=' expr
   61     | expr '>' expr
   62     | expr '<' expr
   63     | expr "<>" expr
   64     | expr "<=" expr
   65     | expr ">=" expr
   66     | "true"
   67     | "false"
   68     | "not" expr
   69     | expr "and" expr
   70     | expr "or" expr
   71     | "new" type '[' expr ']'
   72     | "nil"
   73     | "nil?" '(' expr ')'
   74     | expr '#' expr
   75     | "head" '(' expr ')'
   76     | "tail" '(' expr ')'


Terminals, with rules where they appear

    $end (0) 0
    '#' (35) 74
    '(' (40) 9 10 40 52 73 75 76
    ')' (41) 9 10 40 52 73 75 76
    '*' (42) 57
    '+' (43) 53 55
    ',' (44) 18 39 44
    '-' (45) 54 56
    '/' (47) 58
    ':' (58) 2 29 30 32 34
    ';' (59) 14 30
    '<' (60) 62
    '=' (61) 60
    '>' (62) 61
    '[' (91) 22 23 47 71
    ']' (93) 22 23 47 71
    error (256)
    "and" (258) 69
    "end" (259) 2 29 30
    "list" (260) 23
    "ref" (261) 16
    "bool" (262) 20
    "exit" (263) 27
    "mod" (264) 59
    "return" (265) 28
    "char" (266) 21
    "false" (267) 67
    "true" (268) 66
    "new" (269) 71
    "skip" (270) 35
    "decl" (271) 24
    "for" (272) 30
    "nil" (273) 72
    "tail" (274) 76
    "head" (275) 75
    "def" (276) 2
    "nil?" (277) 73
    "if" (278) 29
    "else" (279) 34
    "elsif" (280) 32
    "not" (281) 68
    "int" (282) 19
    "or" (283) 70
    ":=" (284) 36
    ">=" (285) 65
    "<=" (286) 64
    "<>" (287) 63
    T_constInt (288) 50
    T_var (289) 9 10 17 18 40 45
    T_constChar (290) 51
    T_constString (291) 46
    UPLUS (292)
    UMINUS (293)


Nonterminals, with rules where they appear

    $accept (54)
        on left: 0
    program (55)
        on left: 1
        on right: 0
    func_def (56)
        on left: 2
        on right: 1 4
    definition_list (57)
        on left: 3 4 5 6
        on right: 2 4 5 6
    stmt_list (58)
        on left: 7 8
        on right: 2 8 29 30 32 34
    header (59)
        on left: 9 10
        on right: 2 24
    formal_list (60)
        on left: 11 12
        on right: 9 10
    formal_tail (61)
        on left: 13 14
        on right: 12 14
    formal (62)
        on left: 15 16
        on right: 12 14
    var_list (63)
        on left: 17 18
        on right: 15 16 18 25
    type (64)
        on left: 19 20 21 22 23
        on right: 10 15 16 22 23 25 71
    func_decl (65)
        on left: 24
        on right: 5
    var_def (66)
        on left: 25
        on right: 6
    stmt (67)
        on left: 26 27 28 29 30
        on right: 7 8
    elsif_list (68)
        on left: 31 32
        on right: 29 32
    else (69)
        on left: 33 34
        on right: 29
    simple (70)
        on left: 35 36 37
        on right: 26 38 39
    simple_list (71)
        on left: 38 39
        on right: 30 39
    call (72)
        on left: 40
        on right: 37 48
    expr_list (73)
        on left: 41 42
        on right: 40
    expr_tail (74)
        on left: 43 44
        on right: 42 44
    atom (75)
        on left: 45 46 47 48
        on right: 36 47 49
    expr (76)
        on left: 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76
        on right: 28 29 30 32 36 42 44 47 52 53 54 55 56 57 58 59 60 61 62 63 64 65 68 69 70 71 73 74 75 76


State 0

    0 $accept: . program $end

    "def"  shift, and go to state 1

    program   go to state 2
    func_def  go to state 3


State 1

    2 func_def: "def" . header ':' definition_list stmt_list "end"

    "list"  shift, and go to state 4
    "bool"  shift, and go to state 5
    "char"  shift, and go to state 6
    "int"   shift, and go to state 7
    T_var   shift, and go to state 8

    header  go to state 9
    type    go to state 10


State 2

    0 $accept: program . $end

    $end  shift, and go to state 11


State 3

    1 program: func_def .

    $default  reduce using rule 1 (program)


State 4

   23 type: "list" . '[' type ']'

    '['  shift, and go to state 12


State 5

   20 type: "bool" .

    $default  reduce using rule 20 (type)


State 6

   21 type: "char" .

    $default  reduce using rule 21 (type)


State 7

   19 type: "int" .

    $default  reduce using rule 19 (type)


State 8

    9 header: T_var . '(' formal_list ')'

    '('  shift, and go to state 13


State 9

    2 func_def: "def" header . ':' definition_list stmt_list "end"

    ':'  shift, and go to state 14


State 10

   10 header: type . T_var '(' formal_list ')'
   22 type: type . '[' ']'

    T_var  shift, and go to state 15
    '['    shift, and go to state 16


State 11

    0 $accept: program $end .

    $default  accept


State 12

   23 type: "list" '[' . type ']'

    "list"  shift, and go to state 4
    "bool"  shift, and go to state 5
    "char"  shift, and go to state 6
    "int"   shift, and go to state 7

    type  go to state 17


State 13

    9 header: T_var '(' . formal_list ')'

    "list"  shift, and go to state 4
    "ref"   shift, and go to state 18
    "bool"  shift, and go to state 5
    "char"  shift, and go to state 6
    "int"   shift, and go to state 7

    $default  reduce using rule 11 (formal_list)

    formal_list  go to state 19
    formal       go to state 20
    type         go to state 21


State 14

    2 func_def: "def" header ':' . definition_list stmt_list "end"

    "list"  shift, and go to state 4
    "bool"  shift, and go to state 5
    "char"  shift, and go to state 6
    "decl"  shift, and go to state 22
    "def"   shift, and go to state 1
    "int"   shift, and go to state 7

    $default  reduce using rule 3 (definition_list)

    func_def         go to state 23
    definition_list  go to state 24
    type             go to state 25
    func_decl        go to state 26
    var_def          go to state 27


State 15

   10 header: type T_var . '(' formal_list ')'

    '('  shift, and go to state 28


State 16

   22 type: type '[' . ']'

    ']'  shift, and go to state 29


State 17

   22 type: type . '[' ']'
   23     | "list" '[' type . ']'

    '['  shift, and go to state 16
    ']'  shift, and go to state 30


State 18

   16 formal: "ref" . type var_list

    "list"  shift, and go to state 4
    "bool"  shift, and go to state 5
    "char"  shift, and go to state 6
    "int"   shift, and go to state 7

    type  go to state 31


State 19

    9 header: T_var '(' formal_list . ')'

    ')'  shift, and go to state 32


State 20

   12 formal_list: formal . formal_tail

    ';'  shift, and go to state 33

    $default  reduce using rule 13 (formal_tail)

    formal_tail  go to state 34


State 21

   15 formal: type . var_list
   22 type: type . '[' ']'

    T_var  shift, and go to state 35
    '['    shift, and go to state 16

    var_list  go to state 36


State 22

   24 func_decl: "decl" . header

    "list"  shift, and go to state 4
    "bool"  shift, and go to state 5
    "char"  shift, and go to state 6
    "int"   shift, and go to state 7
    T_var   shift, and go to state 8

    header  go to state 37
    type    go to state 10


State 23

    4 definition_list: func_def . definition_list

    "list"  shift, and go to state 4
    "bool"  shift, and go to state 5
    "char"  shift, and go to state 6
    "decl"  shift, and go to state 22
    "def"   shift, and go to state 1
    "int"   shift, and go to state 7

    $default  reduce using rule 3 (definition_list)

    func_def         go to state 23
    definition_list  go to state 38
    type             go to state 25
    func_decl        go to state 26
    var_def          go to state 27


State 24

    2 func_def: "def" header ':' definition_list . stmt_list "end"

    "exit"         shift, and go to state 39
    "return"       shift, and go to state 40
    "skip"         shift, and go to state 41
    "for"          shift, and go to state 42
    "if"           shift, and go to state 43
    T_var          shift, and go to state 44
    T_constString  shift, and go to state 45

    stmt_list  go to state 46
    stmt       go to state 47
    simple     go to state 48
    call       go to state 49
    atom       go to state 50


State 25

   22 type: type . '[' ']'
   25 var_def: type . var_list

    T_var  shift, and go to state 35
    '['    shift, and go to state 16

    var_list  go to state 51


State 26

    5 definition_list: func_decl . definition_list

    "list"  shift, and go to state 4
    "bool"  shift, and go to state 5
    "char"  shift, and go to state 6
    "decl"  shift, and go to state 22
    "def"   shift, and go to state 1
    "int"   shift, and go to state 7

    $default  reduce using rule 3 (definition_list)

    func_def         go to state 23
    definition_list  go to state 52
    type             go to state 25
    func_decl        go to state 26
    var_def          go to state 27


State 27

    6 definition_list: var_def . definition_list

    "list"  shift, and go to state 4
    "bool"  shift, and go to state 5
    "char"  shift, and go to state 6
    "decl"  shift, and go to state 22
    "def"   shift, and go to state 1
    "int"   shift, and go to state 7

    $default  reduce using rule 3 (definition_list)

    func_def         go to state 23
    definition_list  go to state 53
    type             go to state 25
    func_decl        go to state 26
    var_def          go to state 27


State 28

   10 header: type T_var '(' . formal_list ')'

    "list"  shift, and go to state 4
    "ref"   shift, and go to state 18
    "bool"  shift, and go to state 5
    "char"  shift, and go to state 6
    "int"   shift, and go to state 7

    $default  reduce using rule 11 (formal_list)

    formal_list  go to state 54
    formal       go to state 20
    type         go to state 21


State 29

   22 type: type '[' ']' .

    $default  reduce using rule 22 (type)


State 30

   23 type: "list" '[' type ']' .

    $default  reduce using rule 23 (type)


State 31

   16 formal: "ref" type . var_list
   22 type: type . '[' ']'

    T_var  shift, and go to state 35
    '['    shift, and go to state 16

    var_list  go to state 55


State 32

    9 header: T_var '(' formal_list ')' .

    $default  reduce using rule 9 (header)


State 33

   14 formal_tail: ';' . formal formal_tail

    "list"  shift, and go to state 4
    "ref"   shift, and go to state 18
    "bool"  shift, and go to state 5
    "char"  shift, and go to state 6
    "int"   shift, and go to state 7

    formal  go to state 56
    type    go to state 21


State 34

   12 formal_list: formal formal_tail .

    $default  reduce using rule 12 (formal_list)


State 35

   17 var_list: T_var .
   18         | T_var . ',' var_list

    ','  shift, and go to state 57

    $default  reduce using rule 17 (var_list)


State 36

   15 formal: type var_list .

    $default  reduce using rule 15 (formal)


State 37

   24 func_decl: "decl" header .

    $default  reduce using rule 24 (func_decl)


State 38

    4 definition_list: func_def definition_list .

    $default  reduce using rule 4 (definition_list)


State 39

   27 stmt: "exit" .

    $default  reduce using rule 27 (stmt)


State 40

   28 stmt: "return" . expr

    "false"        shift, and go to state 58
    "true"         shift, and go to state 59
    "new"          shift, and go to state 60
    "nil"          shift, and go to state 61
    "tail"         shift, and go to state 62
    "head"         shift, and go to state 63
    "nil?"         shift, and go to state 64
    "not"          shift, and go to state 65
    T_constInt     shift, and go to state 66
    T_var          shift, and go to state 44
    T_constChar    shift, and go to state 67
    T_constString  shift, and go to state 45
    '+'            shift, and go to state 68
    '-'            shift, and go to state 69
    '('            shift, and go to state 70

    call  go to state 71
    atom  go to state 72
    expr  go to state 73


State 41

   35 simple: "skip" .

    $default  reduce using rule 35 (simple)


State 42

   30 stmt: "for" . simple_list ';' expr ';' simple_list ':' stmt_list "end"

    "skip"         shift, and go to state 41
    T_var          shift, and go to state 44
    T_constString  shift, and go to state 45

    simple       go to state 74
    simple_list  go to state 75
    call         go to state 49
    atom         go to state 50


State 43

   29 stmt: "if" . expr ':' stmt_list elsif_list else "end"

    "false"        shift, and go to state 58
    "true"         shift, and go to state 59
    "new"          shift, and go to state 60
    "nil"          shift, and go to state 61
    "tail"         shift, and go to state 62
    "head"         shift, and go to state 63
    "nil?"         shift, and go to state 64
    "not"          shift, and go to state 65
    T_constInt     shift, and go to state 66
    T_var          shift, and go to state 44
    T_constChar    shift, and go to state 67
    T_constString  shift, and go to state 45
    '+'            shift, and go to state 68
    '-'            shift, and go to state 69
    '('            shift, and go to state 70

    call  go to state 71
    atom  go to state 72
    expr  go to state 76


State 44

   40 call: T_var . '(' expr_list ')'
   45 atom: T_var .

    '('  shift, and go to state 77

    $default  reduce using rule 45 (atom)


State 45

   46 atom: T_constString .

    $default  reduce using rule 46 (atom)


State 46

    2 func_def: "def" header ':' definition_list stmt_list . "end"

    "end"  shift, and go to state 78


State 47

    7 stmt_list: stmt .
    8          | stmt . stmt_list

    "exit"         shift, and go to state 39
    "return"       shift, and go to state 40
    "skip"         shift, and go to state 41
    "for"          shift, and go to state 42
    "if"           shift, and go to state 43
    T_var          shift, and go to state 44
    T_constString  shift, and go to state 45

    $default  reduce using rule 7 (stmt_list)

    stmt_list  go to state 79
    stmt       go to state 47
    simple     go to state 48
    call       go to state 49
    atom       go to state 50


State 48

   26 stmt: simple .

    $default  reduce using rule 26 (stmt)


State 49

   37 simple: call .
   48 atom: call .

    ":="      reduce using rule 48 (atom)
    '['       reduce using rule 48 (atom)
    $default  reduce using rule 37 (simple)


State 50

   36 simple: atom . ":=" expr
   47 atom: atom . '[' expr ']'

    ":="  shift, and go to state 80
    '['   shift, and go to state 81


State 51

   25 var_def: type var_list .

    $default  reduce using rule 25 (var_def)


State 52

    5 definition_list: func_decl definition_list .

    $default  reduce using rule 5 (definition_list)


State 53

    6 definition_list: var_def definition_list .

    $default  reduce using rule 6 (definition_list)


State 54

   10 header: type T_var '(' formal_list . ')'

    ')'  shift, and go to state 82


State 55

   16 formal: "ref" type var_list .

    $default  reduce using rule 16 (formal)


State 56

   14 formal_tail: ';' formal . formal_tail

    ';'  shift, and go to state 33

    $default  reduce using rule 13 (formal_tail)

    formal_tail  go to state 83


State 57

   18 var_list: T_var ',' . var_list

    T_var  shift, and go to state 35

    var_list  go to state 84


State 58

   67 expr: "false" .

    $default  reduce using rule 67 (expr)


State 59

   66 expr: "true" .

    $default  reduce using rule 66 (expr)


State 60

   71 expr: "new" . type '[' expr ']'

    "list"  shift, and go to state 4
    "bool"  shift, and go to state 5
    "char"  shift, and go to state 6
    "int"   shift, and go to state 7

    type  go to state 85


State 61

   72 expr: "nil" .

    $default  reduce using rule 72 (expr)


State 62

   76 expr: "tail" . '(' expr ')'

    '('  shift, and go to state 86


State 63

   75 expr: "head" . '(' expr ')'

    '('  shift, and go to state 87


State 64

   73 expr: "nil?" . '(' expr ')'

    '('  shift, and go to state 88


State 65

   68 expr: "not" . expr

    "false"        shift, and go to state 58
    "true"         shift, and go to state 59
    "new"          shift, and go to state 60
    "nil"          shift, and go to state 61
    "tail"         shift, and go to state 62
    "head"         shift, and go to state 63
    "nil?"         shift, and go to state 64
    "not"          shift, and go to state 65
    T_constInt     shift, and go to state 66
    T_var          shift, and go to state 44
    T_constChar    shift, and go to state 67
    T_constString  shift, and go to state 45
    '+'            shift, and go to state 68
    '-'            shift, and go to state 69
    '('            shift, and go to state 70

    call  go to state 71
    atom  go to state 72
    expr  go to state 89


State 66

   50 expr: T_constInt .

    $default  reduce using rule 50 (expr)


State 67

   51 expr: T_constChar .

    $default  reduce using rule 51 (expr)


State 68

   53 expr: '+' . expr

    "false"        shift, and go to state 58
    "true"         shift, and go to state 59
    "new"          shift, and go to state 60
    "nil"          shift, and go to state 61
    "tail"         shift, and go to state 62
    "head"         shift, and go to state 63
    "nil?"         shift, and go to state 64
    "not"          shift, and go to state 65
    T_constInt     shift, and go to state 66
    T_var          shift, and go to state 44
    T_constChar    shift, and go to state 67
    T_constString  shift, and go to state 45
    '+'            shift, and go to state 68
    '-'            shift, and go to state 69
    '('            shift, and go to state 70

    call  go to state 71
    atom  go to state 72
    expr  go to state 90


State 69

   54 expr: '-' . expr

    "false"        shift, and go to state 58
    "true"         shift, and go to state 59
    "new"          shift, and go to state 60
    "nil"          shift, and go to state 61
    "tail"         shift, and go to state 62
    "head"         shift, and go to state 63
    "nil?"         shift, and go to state 64
    "not"          shift, and go to state 65
    T_constInt     shift, and go to state 66
    T_var          shift, and go to state 44
    T_constChar    shift, and go to state 67
    T_constString  shift, and go to state 45
    '+'            shift, and go to state 68
    '-'            shift, and go to state 69
    '('            shift, and go to state 70

    call  go to state 71
    atom  go to state 72
    expr  go to state 91


State 70

   52 expr: '(' . expr ')'

    "false"        shift, and go to state 58
    "true"         shift, and go to state 59
    "new"          shift, and go to state 60
    "nil"          shift, and go to state 61
    "tail"         shift, and go to state 62
    "head"         shift, and go to state 63
    "nil?"         shift, and go to state 64
    "not"          shift, and go to state 65
    T_constInt     shift, and go to state 66
    T_var          shift, and go to state 44
    T_constChar    shift, and go to state 67
    T_constString  shift, and go to state 45
    '+'            shift, and go to state 68
    '-'            shift, and go to state 69
    '('            shift, and go to state 70

    call  go to state 71
    atom  go to state 72
    expr  go to state 92


State 71

   48 atom: call .

    $default  reduce using rule 48 (atom)


State 72

   47 atom: atom . '[' expr ']'
   49 expr: atom .

    '['  shift, and go to state 81

    $default  reduce using rule 49 (expr)


State 73

   28 stmt: "return" expr .
   55 expr: expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   59     | expr . "mod" expr
   60     | expr . '=' expr
   61     | expr . '>' expr
   62     | expr . '<' expr
   63     | expr . "<>" expr
   64     | expr . "<=" expr
   65     | expr . ">=" expr
   69     | expr . "and" expr
   70     | expr . "or" expr
   74     | expr . '#' expr

    "and"  shift, and go to state 93
    "mod"  shift, and go to state 94
    "or"   shift, and go to state 95
    ">="   shift, and go to state 96
    "<="   shift, and go to state 97
    "<>"   shift, and go to state 98
    '='    shift, and go to state 99
    '>'    shift, and go to state 100
    '<'    shift, and go to state 101
    '#'    shift, and go to state 102
    '+'    shift, and go to state 103
    '-'    shift, and go to state 104
    '*'    shift, and go to state 105
    '/'    shift, and go to state 106

    $default  reduce using rule 28 (stmt)


State 74

   38 simple_list: simple .
   39            | simple . ',' simple_list

    ','  shift, and go to state 107

    $default  reduce using rule 38 (simple_list)


State 75

   30 stmt: "for" simple_list . ';' expr ';' simple_list ':' stmt_list "end"

    ';'  shift, and go to state 108


State 76

   29 stmt: "if" expr . ':' stmt_list elsif_list else "end"
   55 expr: expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   59     | expr . "mod" expr
   60     | expr . '=' expr
   61     | expr . '>' expr
   62     | expr . '<' expr
   63     | expr . "<>" expr
   64     | expr . "<=" expr
   65     | expr . ">=" expr
   69     | expr . "and" expr
   70     | expr . "or" expr
   74     | expr . '#' expr

    "and"  shift, and go to state 93
    "mod"  shift, and go to state 94
    "or"   shift, and go to state 95
    ">="   shift, and go to state 96
    "<="   shift, and go to state 97
    "<>"   shift, and go to state 98
    '='    shift, and go to state 99
    '>'    shift, and go to state 100
    '<'    shift, and go to state 101
    '#'    shift, and go to state 102
    '+'    shift, and go to state 103
    '-'    shift, and go to state 104
    '*'    shift, and go to state 105
    '/'    shift, and go to state 106
    ':'    shift, and go to state 109


State 77

   40 call: T_var '(' . expr_list ')'

    "false"        shift, and go to state 58
    "true"         shift, and go to state 59
    "new"          shift, and go to state 60
    "nil"          shift, and go to state 61
    "tail"         shift, and go to state 62
    "head"         shift, and go to state 63
    "nil?"         shift, and go to state 64
    "not"          shift, and go to state 65
    T_constInt     shift, and go to state 66
    T_var          shift, and go to state 44
    T_constChar    shift, and go to state 67
    T_constString  shift, and go to state 45
    '+'            shift, and go to state 68
    '-'            shift, and go to state 69
    '('            shift, and go to state 70

    $default  reduce using rule 41 (expr_list)

    call       go to state 71
    expr_list  go to state 110
    atom       go to state 72
    expr       go to state 111


State 78

    2 func_def: "def" header ':' definition_list stmt_list "end" .

    $default  reduce using rule 2 (func_def)


State 79

    8 stmt_list: stmt stmt_list .

    $default  reduce using rule 8 (stmt_list)


State 80

   36 simple: atom ":=" . expr

    "false"        shift, and go to state 58
    "true"         shift, and go to state 59
    "new"          shift, and go to state 60
    "nil"          shift, and go to state 61
    "tail"         shift, and go to state 62
    "head"         shift, and go to state 63
    "nil?"         shift, and go to state 64
    "not"          shift, and go to state 65
    T_constInt     shift, and go to state 66
    T_var          shift, and go to state 44
    T_constChar    shift, and go to state 67
    T_constString  shift, and go to state 45
    '+'            shift, and go to state 68
    '-'            shift, and go to state 69
    '('            shift, and go to state 70

    call  go to state 71
    atom  go to state 72
    expr  go to state 112


State 81

   47 atom: atom '[' . expr ']'

    "false"        shift, and go to state 58
    "true"         shift, and go to state 59
    "new"          shift, and go to state 60
    "nil"          shift, and go to state 61
    "tail"         shift, and go to state 62
    "head"         shift, and go to state 63
    "nil?"         shift, and go to state 64
    "not"          shift, and go to state 65
    T_constInt     shift, and go to state 66
    T_var          shift, and go to state 44
    T_constChar    shift, and go to state 67
    T_constString  shift, and go to state 45
    '+'            shift, and go to state 68
    '-'            shift, and go to state 69
    '('            shift, and go to state 70

    call  go to state 71
    atom  go to state 72
    expr  go to state 113


State 82

   10 header: type T_var '(' formal_list ')' .

    $default  reduce using rule 10 (header)


State 83

   14 formal_tail: ';' formal formal_tail .

    $default  reduce using rule 14 (formal_tail)


State 84

   18 var_list: T_var ',' var_list .

    $default  reduce using rule 18 (var_list)


State 85

   22 type: type . '[' ']'
   71 expr: "new" type . '[' expr ']'

    '['  shift, and go to state 114


State 86

   76 expr: "tail" '(' . expr ')'

    "false"        shift, and go to state 58
    "true"         shift, and go to state 59
    "new"          shift, and go to state 60
    "nil"          shift, and go to state 61
    "tail"         shift, and go to state 62
    "head"         shift, and go to state 63
    "nil?"         shift, and go to state 64
    "not"          shift, and go to state 65
    T_constInt     shift, and go to state 66
    T_var          shift, and go to state 44
    T_constChar    shift, and go to state 67
    T_constString  shift, and go to state 45
    '+'            shift, and go to state 68
    '-'            shift, and go to state 69
    '('            shift, and go to state 70

    call  go to state 71
    atom  go to state 72
    expr  go to state 115


State 87

   75 expr: "head" '(' . expr ')'

    "false"        shift, and go to state 58
    "true"         shift, and go to state 59
    "new"          shift, and go to state 60
    "nil"          shift, and go to state 61
    "tail"         shift, and go to state 62
    "head"         shift, and go to state 63
    "nil?"         shift, and go to state 64
    "not"          shift, and go to state 65
    T_constInt     shift, and go to state 66
    T_var          shift, and go to state 44
    T_constChar    shift, and go to state 67
    T_constString  shift, and go to state 45
    '+'            shift, and go to state 68
    '-'            shift, and go to state 69
    '('            shift, and go to state 70

    call  go to state 71
    atom  go to state 72
    expr  go to state 116


State 88

   73 expr: "nil?" '(' . expr ')'

    "false"        shift, and go to state 58
    "true"         shift, and go to state 59
    "new"          shift, and go to state 60
    "nil"          shift, and go to state 61
    "tail"         shift, and go to state 62
    "head"         shift, and go to state 63
    "nil?"         shift, and go to state 64
    "not"          shift, and go to state 65
    T_constInt     shift, and go to state 66
    T_var          shift, and go to state 44
    T_constChar    shift, and go to state 67
    T_constString  shift, and go to state 45
    '+'            shift, and go to state 68
    '-'            shift, and go to state 69
    '('            shift, and go to state 70

    call  go to state 71
    atom  go to state 72
    expr  go to state 117


State 89

   55 expr: expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   59     | expr . "mod" expr
   60     | expr . '=' expr
   61     | expr . '>' expr
   62     | expr . '<' expr
   63     | expr . "<>" expr
   64     | expr . "<=" expr
   65     | expr . ">=" expr
   68     | "not" expr .
   69     | expr . "and" expr
   70     | expr . "or" expr
   74     | expr . '#' expr

    "mod"  shift, and go to state 94
    ">="   shift, and go to state 96
    "<="   shift, and go to state 97
    "<>"   shift, and go to state 98
    '='    shift, and go to state 99
    '>'    shift, and go to state 100
    '<'    shift, and go to state 101
    '#'    shift, and go to state 102
    '+'    shift, and go to state 103
    '-'    shift, and go to state 104
    '*'    shift, and go to state 105
    '/'    shift, and go to state 106

    $default  reduce using rule 68 (expr)


State 90

   53 expr: '+' expr .
   55     | expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   59     | expr . "mod" expr
   60     | expr . '=' expr
   61     | expr . '>' expr
   62     | expr . '<' expr
   63     | expr . "<>" expr
   64     | expr . "<=" expr
   65     | expr . ">=" expr
   69     | expr . "and" expr
   70     | expr . "or" expr
   74     | expr . '#' expr

    $default  reduce using rule 53 (expr)


State 91

   54 expr: '-' expr .
   55     | expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   59     | expr . "mod" expr
   60     | expr . '=' expr
   61     | expr . '>' expr
   62     | expr . '<' expr
   63     | expr . "<>" expr
   64     | expr . "<=" expr
   65     | expr . ">=" expr
   69     | expr . "and" expr
   70     | expr . "or" expr
   74     | expr . '#' expr

    $default  reduce using rule 54 (expr)


State 92

   52 expr: '(' expr . ')'
   55     | expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   59     | expr . "mod" expr
   60     | expr . '=' expr
   61     | expr . '>' expr
   62     | expr . '<' expr
   63     | expr . "<>" expr
   64     | expr . "<=" expr
   65     | expr . ">=" expr
   69     | expr . "and" expr
   70     | expr . "or" expr
   74     | expr . '#' expr

    "and"  shift, and go to state 93
    "mod"  shift, and go to state 94
    "or"   shift, and go to state 95
    ">="   shift, and go to state 96
    "<="   shift, and go to state 97
    "<>"   shift, and go to state 98
    '='    shift, and go to state 99
    '>'    shift, and go to state 100
    '<'    shift, and go to state 101
    '#'    shift, and go to state 102
    '+'    shift, and go to state 103
    '-'    shift, and go to state 104
    '*'    shift, and go to state 105
    '/'    shift, and go to state 106
    ')'    shift, and go to state 118


State 93

   69 expr: expr "and" . expr

    "false"        shift, and go to state 58
    "true"         shift, and go to state 59
    "new"          shift, and go to state 60
    "nil"          shift, and go to state 61
    "tail"         shift, and go to state 62
    "head"         shift, and go to state 63
    "nil?"         shift, and go to state 64
    "not"          shift, and go to state 65
    T_constInt     shift, and go to state 66
    T_var          shift, and go to state 44
    T_constChar    shift, and go to state 67
    T_constString  shift, and go to state 45
    '+'            shift, and go to state 68
    '-'            shift, and go to state 69
    '('            shift, and go to state 70

    call  go to state 71
    atom  go to state 72
    expr  go to state 119


State 94

   59 expr: expr "mod" . expr

    "false"        shift, and go to state 58
    "true"         shift, and go to state 59
    "new"          shift, and go to state 60
    "nil"          shift, and go to state 61
    "tail"         shift, and go to state 62
    "head"         shift, and go to state 63
    "nil?"         shift, and go to state 64
    "not"          shift, and go to state 65
    T_constInt     shift, and go to state 66
    T_var          shift, and go to state 44
    T_constChar    shift, and go to state 67
    T_constString  shift, and go to state 45
    '+'            shift, and go to state 68
    '-'            shift, and go to state 69
    '('            shift, and go to state 70

    call  go to state 71
    atom  go to state 72
    expr  go to state 120


State 95

   70 expr: expr "or" . expr

    "false"        shift, and go to state 58
    "true"         shift, and go to state 59
    "new"          shift, and go to state 60
    "nil"          shift, and go to state 61
    "tail"         shift, and go to state 62
    "head"         shift, and go to state 63
    "nil?"         shift, and go to state 64
    "not"          shift, and go to state 65
    T_constInt     shift, and go to state 66
    T_var          shift, and go to state 44
    T_constChar    shift, and go to state 67
    T_constString  shift, and go to state 45
    '+'            shift, and go to state 68
    '-'            shift, and go to state 69
    '('            shift, and go to state 70

    call  go to state 71
    atom  go to state 72
    expr  go to state 121


State 96

   65 expr: expr ">=" . expr

    "false"        shift, and go to state 58
    "true"         shift, and go to state 59
    "new"          shift, and go to state 60
    "nil"          shift, and go to state 61
    "tail"         shift, and go to state 62
    "head"         shift, and go to state 63
    "nil?"         shift, and go to state 64
    "not"          shift, and go to state 65
    T_constInt     shift, and go to state 66
    T_var          shift, and go to state 44
    T_constChar    shift, and go to state 67
    T_constString  shift, and go to state 45
    '+'            shift, and go to state 68
    '-'            shift, and go to state 69
    '('            shift, and go to state 70

    call  go to state 71
    atom  go to state 72
    expr  go to state 122


State 97

   64 expr: expr "<=" . expr

    "false"        shift, and go to state 58
    "true"         shift, and go to state 59
    "new"          shift, and go to state 60
    "nil"          shift, and go to state 61
    "tail"         shift, and go to state 62
    "head"         shift, and go to state 63
    "nil?"         shift, and go to state 64
    "not"          shift, and go to state 65
    T_constInt     shift, and go to state 66
    T_var          shift, and go to state 44
    T_constChar    shift, and go to state 67
    T_constString  shift, and go to state 45
    '+'            shift, and go to state 68
    '-'            shift, and go to state 69
    '('            shift, and go to state 70

    call  go to state 71
    atom  go to state 72
    expr  go to state 123


State 98

   63 expr: expr "<>" . expr

    "false"        shift, and go to state 58
    "true"         shift, and go to state 59
    "new"          shift, and go to state 60
    "nil"          shift, and go to state 61
    "tail"         shift, and go to state 62
    "head"         shift, and go to state 63
    "nil?"         shift, and go to state 64
    "not"          shift, and go to state 65
    T_constInt     shift, and go to state 66
    T_var          shift, and go to state 44
    T_constChar    shift, and go to state 67
    T_constString  shift, and go to state 45
    '+'            shift, and go to state 68
    '-'            shift, and go to state 69
    '('            shift, and go to state 70

    call  go to state 71
    atom  go to state 72
    expr  go to state 124


State 99

   60 expr: expr '=' . expr

    "false"        shift, and go to state 58
    "true"         shift, and go to state 59
    "new"          shift, and go to state 60
    "nil"          shift, and go to state 61
    "tail"         shift, and go to state 62
    "head"         shift, and go to state 63
    "nil?"         shift, and go to state 64
    "not"          shift, and go to state 65
    T_constInt     shift, and go to state 66
    T_var          shift, and go to state 44
    T_constChar    shift, and go to state 67
    T_constString  shift, and go to state 45
    '+'            shift, and go to state 68
    '-'            shift, and go to state 69
    '('            shift, and go to state 70

    call  go to state 71
    atom  go to state 72
    expr  go to state 125


State 100

   61 expr: expr '>' . expr

    "false"        shift, and go to state 58
    "true"         shift, and go to state 59
    "new"          shift, and go to state 60
    "nil"          shift, and go to state 61
    "tail"         shift, and go to state 62
    "head"         shift, and go to state 63
    "nil?"         shift, and go to state 64
    "not"          shift, and go to state 65
    T_constInt     shift, and go to state 66
    T_var          shift, and go to state 44
    T_constChar    shift, and go to state 67
    T_constString  shift, and go to state 45
    '+'            shift, and go to state 68
    '-'            shift, and go to state 69
    '('            shift, and go to state 70

    call  go to state 71
    atom  go to state 72
    expr  go to state 126


State 101

   62 expr: expr '<' . expr

    "false"        shift, and go to state 58
    "true"         shift, and go to state 59
    "new"          shift, and go to state 60
    "nil"          shift, and go to state 61
    "tail"         shift, and go to state 62
    "head"         shift, and go to state 63
    "nil?"         shift, and go to state 64
    "not"          shift, and go to state 65
    T_constInt     shift, and go to state 66
    T_var          shift, and go to state 44
    T_constChar    shift, and go to state 67
    T_constString  shift, and go to state 45
    '+'            shift, and go to state 68
    '-'            shift, and go to state 69
    '('            shift, and go to state 70

    call  go to state 71
    atom  go to state 72
    expr  go to state 127


State 102

   74 expr: expr '#' . expr

    "false"        shift, and go to state 58
    "true"         shift, and go to state 59
    "new"          shift, and go to state 60
    "nil"          shift, and go to state 61
    "tail"         shift, and go to state 62
    "head"         shift, and go to state 63
    "nil?"         shift, and go to state 64
    "not"          shift, and go to state 65
    T_constInt     shift, and go to state 66
    T_var          shift, and go to state 44
    T_constChar    shift, and go to state 67
    T_constString  shift, and go to state 45
    '+'            shift, and go to state 68
    '-'            shift, and go to state 69
    '('            shift, and go to state 70

    call  go to state 71
    atom  go to state 72
    expr  go to state 128


State 103

   55 expr: expr '+' . expr

    "false"        shift, and go to state 58
    "true"         shift, and go to state 59
    "new"          shift, and go to state 60
    "nil"          shift, and go to state 61
    "tail"         shift, and go to state 62
    "head"         shift, and go to state 63
    "nil?"         shift, and go to state 64
    "not"          shift, and go to state 65
    T_constInt     shift, and go to state 66
    T_var          shift, and go to state 44
    T_constChar    shift, and go to state 67
    T_constString  shift, and go to state 45
    '+'            shift, and go to state 68
    '-'            shift, and go to state 69
    '('            shift, and go to state 70

    call  go to state 71
    atom  go to state 72
    expr  go to state 129


State 104

   56 expr: expr '-' . expr

    "false"        shift, and go to state 58
    "true"         shift, and go to state 59
    "new"          shift, and go to state 60
    "nil"          shift, and go to state 61
    "tail"         shift, and go to state 62
    "head"         shift, and go to state 63
    "nil?"         shift, and go to state 64
    "not"          shift, and go to state 65
    T_constInt     shift, and go to state 66
    T_var          shift, and go to state 44
    T_constChar    shift, and go to state 67
    T_constString  shift, and go to state 45
    '+'            shift, and go to state 68
    '-'            shift, and go to state 69
    '('            shift, and go to state 70

    call  go to state 71
    atom  go to state 72
    expr  go to state 130


State 105

   57 expr: expr '*' . expr

    "false"        shift, and go to state 58
    "true"         shift, and go to state 59
    "new"          shift, and go to state 60
    "nil"          shift, and go to state 61
    "tail"         shift, and go to state 62
    "head"         shift, and go to state 63
    "nil?"         shift, and go to state 64
    "not"          shift, and go to state 65
    T_constInt     shift, and go to state 66
    T_var          shift, and go to state 44
    T_constChar    shift, and go to state 67
    T_constString  shift, and go to state 45
    '+'            shift, and go to state 68
    '-'            shift, and go to state 69
    '('            shift, and go to state 70

    call  go to state 71
    atom  go to state 72
    expr  go to state 131


State 106

   58 expr: expr '/' . expr

    "false"        shift, and go to state 58
    "true"         shift, and go to state 59
    "new"          shift, and go to state 60
    "nil"          shift, and go to state 61
    "tail"         shift, and go to state 62
    "head"         shift, and go to state 63
    "nil?"         shift, and go to state 64
    "not"          shift, and go to state 65
    T_constInt     shift, and go to state 66
    T_var          shift, and go to state 44
    T_constChar    shift, and go to state 67
    T_constString  shift, and go to state 45
    '+'            shift, and go to state 68
    '-'            shift, and go to state 69
    '('            shift, and go to state 70

    call  go to state 71
    atom  go to state 72
    expr  go to state 132


State 107

   39 simple_list: simple ',' . simple_list

    "skip"         shift, and go to state 41
    T_var          shift, and go to state 44
    T_constString  shift, and go to state 45

    simple       go to state 74
    simple_list  go to state 133
    call         go to state 49
    atom         go to state 50


State 108

   30 stmt: "for" simple_list ';' . expr ';' simple_list ':' stmt_list "end"

    "false"        shift, and go to state 58
    "true"         shift, and go to state 59
    "new"          shift, and go to state 60
    "nil"          shift, and go to state 61
    "tail"         shift, and go to state 62
    "head"         shift, and go to state 63
    "nil?"         shift, and go to state 64
    "not"          shift, and go to state 65
    T_constInt     shift, and go to state 66
    T_var          shift, and go to state 44
    T_constChar    shift, and go to state 67
    T_constString  shift, and go to state 45
    '+'            shift, and go to state 68
    '-'            shift, and go to state 69
    '('            shift, and go to state 70

    call  go to state 71
    atom  go to state 72
    expr  go to state 134


State 109

   29 stmt: "if" expr ':' . stmt_list elsif_list else "end"

    "exit"         shift, and go to state 39
    "return"       shift, and go to state 40
    "skip"         shift, and go to state 41
    "for"          shift, and go to state 42
    "if"           shift, and go to state 43
    T_var          shift, and go to state 44
    T_constString  shift, and go to state 45

    stmt_list  go to state 135
    stmt       go to state 47
    simple     go to state 48
    call       go to state 49
    atom       go to state 50


State 110

   40 call: T_var '(' expr_list . ')'

    ')'  shift, and go to state 136


State 111

   42 expr_list: expr . expr_tail
   55 expr: expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   59     | expr . "mod" expr
   60     | expr . '=' expr
   61     | expr . '>' expr
   62     | expr . '<' expr
   63     | expr . "<>" expr
   64     | expr . "<=" expr
   65     | expr . ">=" expr
   69     | expr . "and" expr
   70     | expr . "or" expr
   74     | expr . '#' expr

    "and"  shift, and go to state 93
    "mod"  shift, and go to state 94
    "or"   shift, and go to state 95
    ">="   shift, and go to state 96
    "<="   shift, and go to state 97
    "<>"   shift, and go to state 98
    '='    shift, and go to state 99
    '>'    shift, and go to state 100
    '<'    shift, and go to state 101
    '#'    shift, and go to state 102
    '+'    shift, and go to state 103
    '-'    shift, and go to state 104
    '*'    shift, and go to state 105
    '/'    shift, and go to state 106
    ','    shift, and go to state 137

    $default  reduce using rule 43 (expr_tail)

    expr_tail  go to state 138


State 112

   36 simple: atom ":=" expr .
   55 expr: expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   59     | expr . "mod" expr
   60     | expr . '=' expr
   61     | expr . '>' expr
   62     | expr . '<' expr
   63     | expr . "<>" expr
   64     | expr . "<=" expr
   65     | expr . ">=" expr
   69     | expr . "and" expr
   70     | expr . "or" expr
   74     | expr . '#' expr

    "and"  shift, and go to state 93
    "mod"  shift, and go to state 94
    "or"   shift, and go to state 95
    ">="   shift, and go to state 96
    "<="   shift, and go to state 97
    "<>"   shift, and go to state 98
    '='    shift, and go to state 99
    '>'    shift, and go to state 100
    '<'    shift, and go to state 101
    '#'    shift, and go to state 102
    '+'    shift, and go to state 103
    '-'    shift, and go to state 104
    '*'    shift, and go to state 105
    '/'    shift, and go to state 106

    $default  reduce using rule 36 (simple)


State 113

   47 atom: atom '[' expr . ']'
   55 expr: expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   59     | expr . "mod" expr
   60     | expr . '=' expr
   61     | expr . '>' expr
   62     | expr . '<' expr
   63     | expr . "<>" expr
   64     | expr . "<=" expr
   65     | expr . ">=" expr
   69     | expr . "and" expr
   70     | expr . "or" expr
   74     | expr . '#' expr

    "and"  shift, and go to state 93
    "mod"  shift, and go to state 94
    "or"   shift, and go to state 95
    ">="   shift, and go to state 96
    "<="   shift, and go to state 97
    "<>"   shift, and go to state 98
    '='    shift, and go to state 99
    '>'    shift, and go to state 100
    '<'    shift, and go to state 101
    '#'    shift, and go to state 102
    '+'    shift, and go to state 103
    '-'    shift, and go to state 104
    '*'    shift, and go to state 105
    '/'    shift, and go to state 106
    ']'    shift, and go to state 139


State 114

   22 type: type '[' . ']'
   71 expr: "new" type '[' . expr ']'

    "false"        shift, and go to state 58
    "true"         shift, and go to state 59
    "new"          shift, and go to state 60
    "nil"          shift, and go to state 61
    "tail"         shift, and go to state 62
    "head"         shift, and go to state 63
    "nil?"         shift, and go to state 64
    "not"          shift, and go to state 65
    T_constInt     shift, and go to state 66
    T_var          shift, and go to state 44
    T_constChar    shift, and go to state 67
    T_constString  shift, and go to state 45
    '+'            shift, and go to state 68
    '-'            shift, and go to state 69
    '('            shift, and go to state 70
    ']'            shift, and go to state 29

    call  go to state 71
    atom  go to state 72
    expr  go to state 140


State 115

   55 expr: expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   59     | expr . "mod" expr
   60     | expr . '=' expr
   61     | expr . '>' expr
   62     | expr . '<' expr
   63     | expr . "<>" expr
   64     | expr . "<=" expr
   65     | expr . ">=" expr
   69     | expr . "and" expr
   70     | expr . "or" expr
   74     | expr . '#' expr
   76     | "tail" '(' expr . ')'

    "and"  shift, and go to state 93
    "mod"  shift, and go to state 94
    "or"   shift, and go to state 95
    ">="   shift, and go to state 96
    "<="   shift, and go to state 97
    "<>"   shift, and go to state 98
    '='    shift, and go to state 99
    '>'    shift, and go to state 100
    '<'    shift, and go to state 101
    '#'    shift, and go to state 102
    '+'    shift, and go to state 103
    '-'    shift, and go to state 104
    '*'    shift, and go to state 105
    '/'    shift, and go to state 106
    ')'    shift, and go to state 141


State 116

   55 expr: expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   59     | expr . "mod" expr
   60     | expr . '=' expr
   61     | expr . '>' expr
   62     | expr . '<' expr
   63     | expr . "<>" expr
   64     | expr . "<=" expr
   65     | expr . ">=" expr
   69     | expr . "and" expr
   70     | expr . "or" expr
   74     | expr . '#' expr
   75     | "head" '(' expr . ')'

    "and"  shift, and go to state 93
    "mod"  shift, and go to state 94
    "or"   shift, and go to state 95
    ">="   shift, and go to state 96
    "<="   shift, and go to state 97
    "<>"   shift, and go to state 98
    '='    shift, and go to state 99
    '>'    shift, and go to state 100
    '<'    shift, and go to state 101
    '#'    shift, and go to state 102
    '+'    shift, and go to state 103
    '-'    shift, and go to state 104
    '*'    shift, and go to state 105
    '/'    shift, and go to state 106
    ')'    shift, and go to state 142


State 117

   55 expr: expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   59     | expr . "mod" expr
   60     | expr . '=' expr
   61     | expr . '>' expr
   62     | expr . '<' expr
   63     | expr . "<>" expr
   64     | expr . "<=" expr
   65     | expr . ">=" expr
   69     | expr . "and" expr
   70     | expr . "or" expr
   73     | "nil?" '(' expr . ')'
   74     | expr . '#' expr

    "and"  shift, and go to state 93
    "mod"  shift, and go to state 94
    "or"   shift, and go to state 95
    ">="   shift, and go to state 96
    "<="   shift, and go to state 97
    "<>"   shift, and go to state 98
    '='    shift, and go to state 99
    '>'    shift, and go to state 100
    '<'    shift, and go to state 101
    '#'    shift, and go to state 102
    '+'    shift, and go to state 103
    '-'    shift, and go to state 104
    '*'    shift, and go to state 105
    '/'    shift, and go to state 106
    ')'    shift, and go to state 143


State 118

   52 expr: '(' expr ')' .

    $default  reduce using rule 52 (expr)


State 119

   55 expr: expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   59     | expr . "mod" expr
   60     | expr . '=' expr
   61     | expr . '>' expr
   62     | expr . '<' expr
   63     | expr . "<>" expr
   64     | expr . "<=" expr
   65     | expr . ">=" expr
   69     | expr . "and" expr
   69     | expr "and" expr .
   70     | expr . "or" expr
   74     | expr . '#' expr

    "mod"  shift, and go to state 94
    ">="   shift, and go to state 96
    "<="   shift, and go to state 97
    "<>"   shift, and go to state 98
    '='    shift, and go to state 99
    '>'    shift, and go to state 100
    '<'    shift, and go to state 101
    '#'    shift, and go to state 102
    '+'    shift, and go to state 103
    '-'    shift, and go to state 104
    '*'    shift, and go to state 105
    '/'    shift, and go to state 106

    $default  reduce using rule 69 (expr)


State 120

   55 expr: expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   59     | expr . "mod" expr
   59     | expr "mod" expr .
   60     | expr . '=' expr
   61     | expr . '>' expr
   62     | expr . '<' expr
   63     | expr . "<>" expr
   64     | expr . "<=" expr
   65     | expr . ">=" expr
   69     | expr . "and" expr
   70     | expr . "or" expr
   74     | expr . '#' expr

    $default  reduce using rule 59 (expr)


State 121

   55 expr: expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   59     | expr . "mod" expr
   60     | expr . '=' expr
   61     | expr . '>' expr
   62     | expr . '<' expr
   63     | expr . "<>" expr
   64     | expr . "<=" expr
   65     | expr . ">=" expr
   69     | expr . "and" expr
   70     | expr . "or" expr
   70     | expr "or" expr .
   74     | expr . '#' expr

    "and"  shift, and go to state 93
    "mod"  shift, and go to state 94
    ">="   shift, and go to state 96
    "<="   shift, and go to state 97
    "<>"   shift, and go to state 98
    '='    shift, and go to state 99
    '>'    shift, and go to state 100
    '<'    shift, and go to state 101
    '#'    shift, and go to state 102
    '+'    shift, and go to state 103
    '-'    shift, and go to state 104
    '*'    shift, and go to state 105
    '/'    shift, and go to state 106

    $default  reduce using rule 70 (expr)


State 122

   55 expr: expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   59     | expr . "mod" expr
   60     | expr . '=' expr
   61     | expr . '>' expr
   62     | expr . '<' expr
   63     | expr . "<>" expr
   64     | expr . "<=" expr
   65     | expr . ">=" expr
   65     | expr ">=" expr .
   69     | expr . "and" expr
   70     | expr . "or" expr
   74     | expr . '#' expr

    "mod"  shift, and go to state 94
    '#'    shift, and go to state 102
    '+'    shift, and go to state 103
    '-'    shift, and go to state 104
    '*'    shift, and go to state 105
    '/'    shift, and go to state 106

    ">="  error (nonassociative)
    "<="  error (nonassociative)
    "<>"  error (nonassociative)
    '='   error (nonassociative)
    '>'   error (nonassociative)
    '<'   error (nonassociative)

    $default  reduce using rule 65 (expr)


State 123

   55 expr: expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   59     | expr . "mod" expr
   60     | expr . '=' expr
   61     | expr . '>' expr
   62     | expr . '<' expr
   63     | expr . "<>" expr
   64     | expr . "<=" expr
   64     | expr "<=" expr .
   65     | expr . ">=" expr
   69     | expr . "and" expr
   70     | expr . "or" expr
   74     | expr . '#' expr

    "mod"  shift, and go to state 94
    '#'    shift, and go to state 102
    '+'    shift, and go to state 103
    '-'    shift, and go to state 104
    '*'    shift, and go to state 105
    '/'    shift, and go to state 106

    ">="  error (nonassociative)
    "<="  error (nonassociative)
    "<>"  error (nonassociative)
    '='   error (nonassociative)
    '>'   error (nonassociative)
    '<'   error (nonassociative)

    $default  reduce using rule 64 (expr)


State 124

   55 expr: expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   59     | expr . "mod" expr
   60     | expr . '=' expr
   61     | expr . '>' expr
   62     | expr . '<' expr
   63     | expr . "<>" expr
   63     | expr "<>" expr .
   64     | expr . "<=" expr
   65     | expr . ">=" expr
   69     | expr . "and" expr
   70     | expr . "or" expr
   74     | expr . '#' expr

    "mod"  shift, and go to state 94
    '#'    shift, and go to state 102
    '+'    shift, and go to state 103
    '-'    shift, and go to state 104
    '*'    shift, and go to state 105
    '/'    shift, and go to state 106

    ">="  error (nonassociative)
    "<="  error (nonassociative)
    "<>"  error (nonassociative)
    '='   error (nonassociative)
    '>'   error (nonassociative)
    '<'   error (nonassociative)

    $default  reduce using rule 63 (expr)


State 125

   55 expr: expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   59     | expr . "mod" expr
   60     | expr . '=' expr
   60     | expr '=' expr .
   61     | expr . '>' expr
   62     | expr . '<' expr
   63     | expr . "<>" expr
   64     | expr . "<=" expr
   65     | expr . ">=" expr
   69     | expr . "and" expr
   70     | expr . "or" expr
   74     | expr . '#' expr

    "mod"  shift, and go to state 94
    '#'    shift, and go to state 102
    '+'    shift, and go to state 103
    '-'    shift, and go to state 104
    '*'    shift, and go to state 105
    '/'    shift, and go to state 106

    ">="  error (nonassociative)
    "<="  error (nonassociative)
    "<>"  error (nonassociative)
    '='   error (nonassociative)
    '>'   error (nonassociative)
    '<'   error (nonassociative)

    $default  reduce using rule 60 (expr)


State 126

   55 expr: expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   59     | expr . "mod" expr
   60     | expr . '=' expr
   61     | expr . '>' expr
   61     | expr '>' expr .
   62     | expr . '<' expr
   63     | expr . "<>" expr
   64     | expr . "<=" expr
   65     | expr . ">=" expr
   69     | expr . "and" expr
   70     | expr . "or" expr
   74     | expr . '#' expr

    "mod"  shift, and go to state 94
    '#'    shift, and go to state 102
    '+'    shift, and go to state 103
    '-'    shift, and go to state 104
    '*'    shift, and go to state 105
    '/'    shift, and go to state 106

    ">="  error (nonassociative)
    "<="  error (nonassociative)
    "<>"  error (nonassociative)
    '='   error (nonassociative)
    '>'   error (nonassociative)
    '<'   error (nonassociative)

    $default  reduce using rule 61 (expr)


State 127

   55 expr: expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   59     | expr . "mod" expr
   60     | expr . '=' expr
   61     | expr . '>' expr
   62     | expr . '<' expr
   62     | expr '<' expr .
   63     | expr . "<>" expr
   64     | expr . "<=" expr
   65     | expr . ">=" expr
   69     | expr . "and" expr
   70     | expr . "or" expr
   74     | expr . '#' expr

    "mod"  shift, and go to state 94
    '#'    shift, and go to state 102
    '+'    shift, and go to state 103
    '-'    shift, and go to state 104
    '*'    shift, and go to state 105
    '/'    shift, and go to state 106

    ">="  error (nonassociative)
    "<="  error (nonassociative)
    "<>"  error (nonassociative)
    '='   error (nonassociative)
    '>'   error (nonassociative)
    '<'   error (nonassociative)

    $default  reduce using rule 62 (expr)


State 128

   55 expr: expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   59     | expr . "mod" expr
   60     | expr . '=' expr
   61     | expr . '>' expr
   62     | expr . '<' expr
   63     | expr . "<>" expr
   64     | expr . "<=" expr
   65     | expr . ">=" expr
   69     | expr . "and" expr
   70     | expr . "or" expr
   74     | expr . '#' expr
   74     | expr '#' expr .

    "mod"  shift, and go to state 94
    '#'    shift, and go to state 102
    '+'    shift, and go to state 103
    '-'    shift, and go to state 104
    '*'    shift, and go to state 105
    '/'    shift, and go to state 106

    $default  reduce using rule 74 (expr)


State 129

   55 expr: expr . '+' expr
   55     | expr '+' expr .
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   59     | expr . "mod" expr
   60     | expr . '=' expr
   61     | expr . '>' expr
   62     | expr . '<' expr
   63     | expr . "<>" expr
   64     | expr . "<=" expr
   65     | expr . ">=" expr
   69     | expr . "and" expr
   70     | expr . "or" expr
   74     | expr . '#' expr

    "mod"  shift, and go to state 94
    '*'    shift, and go to state 105
    '/'    shift, and go to state 106

    $default  reduce using rule 55 (expr)


State 130

   55 expr: expr . '+' expr
   56     | expr . '-' expr
   56     | expr '-' expr .
   57     | expr . '*' expr
   58     | expr . '/' expr
   59     | expr . "mod" expr
   60     | expr . '=' expr
   61     | expr . '>' expr
   62     | expr . '<' expr
   63     | expr . "<>" expr
   64     | expr . "<=" expr
   65     | expr . ">=" expr
   69     | expr . "and" expr
   70     | expr . "or" expr
   74     | expr . '#' expr

    "mod"  shift, and go to state 94
    '*'    shift, and go to state 105
    '/'    shift, and go to state 106

    $default  reduce using rule 56 (expr)


State 131

   55 expr: expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   57     | expr '*' expr .
   58     | expr . '/' expr
   59     | expr . "mod" expr
   60     | expr . '=' expr
   61     | expr . '>' expr
   62     | expr . '<' expr
   63     | expr . "<>" expr
   64     | expr . "<=" expr
   65     | expr . ">=" expr
   69     | expr . "and" expr
   70     | expr . "or" expr
   74     | expr . '#' expr

    $default  reduce using rule 57 (expr)


State 132

   55 expr: expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   58     | expr '/' expr .
   59     | expr . "mod" expr
   60     | expr . '=' expr
   61     | expr . '>' expr
   62     | expr . '<' expr
   63     | expr . "<>" expr
   64     | expr . "<=" expr
   65     | expr . ">=" expr
   69     | expr . "and" expr
   70     | expr . "or" expr
   74     | expr . '#' expr

    $default  reduce using rule 58 (expr)


State 133

   39 simple_list: simple ',' simple_list .

    $default  reduce using rule 39 (simple_list)


State 134

   30 stmt: "for" simple_list ';' expr . ';' simple_list ':' stmt_list "end"
   55 expr: expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   59     | expr . "mod" expr
   60     | expr . '=' expr
   61     | expr . '>' expr
   62     | expr . '<' expr
   63     | expr . "<>" expr
   64     | expr . "<=" expr
   65     | expr . ">=" expr
   69     | expr . "and" expr
   70     | expr . "or" expr
   74     | expr . '#' expr

    "and"  shift, and go to state 93
    "mod"  shift, and go to state 94
    "or"   shift, and go to state 95
    ">="   shift, and go to state 96
    "<="   shift, and go to state 97
    "<>"   shift, and go to state 98
    '='    shift, and go to state 99
    '>'    shift, and go to state 100
    '<'    shift, and go to state 101
    '#'    shift, and go to state 102
    '+'    shift, and go to state 103
    '-'    shift, and go to state 104
    '*'    shift, and go to state 105
    '/'    shift, and go to state 106
    ';'    shift, and go to state 144


State 135

   29 stmt: "if" expr ':' stmt_list . elsif_list else "end"

    "elsif"  shift, and go to state 145

    $default  reduce using rule 31 (elsif_list)

    elsif_list  go to state 146


State 136

   40 call: T_var '(' expr_list ')' .

    $default  reduce using rule 40 (call)


State 137

   44 expr_tail: ',' . expr expr_tail

    "false"        shift, and go to state 58
    "true"         shift, and go to state 59
    "new"          shift, and go to state 60
    "nil"          shift, and go to state 61
    "tail"         shift, and go to state 62
    "head"         shift, and go to state 63
    "nil?"         shift, and go to state 64
    "not"          shift, and go to state 65
    T_constInt     shift, and go to state 66
    T_var          shift, and go to state 44
    T_constChar    shift, and go to state 67
    T_constString  shift, and go to state 45
    '+'            shift, and go to state 68
    '-'            shift, and go to state 69
    '('            shift, and go to state 70

    call  go to state 71
    atom  go to state 72
    expr  go to state 147


State 138

   42 expr_list: expr expr_tail .

    $default  reduce using rule 42 (expr_list)


State 139

   47 atom: atom '[' expr ']' .

    $default  reduce using rule 47 (atom)


State 140

   55 expr: expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   59     | expr . "mod" expr
   60     | expr . '=' expr
   61     | expr . '>' expr
   62     | expr . '<' expr
   63     | expr . "<>" expr
   64     | expr . "<=" expr
   65     | expr . ">=" expr
   69     | expr . "and" expr
   70     | expr . "or" expr
   71     | "new" type '[' expr . ']'
   74     | expr . '#' expr

    "and"  shift, and go to state 93
    "mod"  shift, and go to state 94
    "or"   shift, and go to state 95
    ">="   shift, and go to state 96
    "<="   shift, and go to state 97
    "<>"   shift, and go to state 98
    '='    shift, and go to state 99
    '>'    shift, and go to state 100
    '<'    shift, and go to state 101
    '#'    shift, and go to state 102
    '+'    shift, and go to state 103
    '-'    shift, and go to state 104
    '*'    shift, and go to state 105
    '/'    shift, and go to state 106
    ']'    shift, and go to state 148


State 141

   76 expr: "tail" '(' expr ')' .

    $default  reduce using rule 76 (expr)


State 142

   75 expr: "head" '(' expr ')' .

    $default  reduce using rule 75 (expr)


State 143

   73 expr: "nil?" '(' expr ')' .

    $default  reduce using rule 73 (expr)


State 144

   30 stmt: "for" simple_list ';' expr ';' . simple_list ':' stmt_list "end"

    "skip"         shift, and go to state 41
    T_var          shift, and go to state 44
    T_constString  shift, and go to state 45

    simple       go to state 74
    simple_list  go to state 149
    call         go to state 49
    atom         go to state 50


State 145

   32 elsif_list: "elsif" . expr ':' stmt_list elsif_list

    "false"        shift, and go to state 58
    "true"         shift, and go to state 59
    "new"          shift, and go to state 60
    "nil"          shift, and go to state 61
    "tail"         shift, and go to state 62
    "head"         shift, and go to state 63
    "nil?"         shift, and go to state 64
    "not"          shift, and go to state 65
    T_constInt     shift, and go to state 66
    T_var          shift, and go to state 44
    T_constChar    shift, and go to state 67
    T_constString  shift, and go to state 45
    '+'            shift, and go to state 68
    '-'            shift, and go to state 69
    '('            shift, and go to state 70

    call  go to state 71
    atom  go to state 72
    expr  go to state 150


State 146

   29 stmt: "if" expr ':' stmt_list elsif_list . else "end"

    "else"  shift, and go to state 151

    $default  reduce using rule 33 (else)

    else  go to state 152


State 147

   44 expr_tail: ',' expr . expr_tail
   55 expr: expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   59     | expr . "mod" expr
   60     | expr . '=' expr
   61     | expr . '>' expr
   62     | expr . '<' expr
   63     | expr . "<>" expr
   64     | expr . "<=" expr
   65     | expr . ">=" expr
   69     | expr . "and" expr
   70     | expr . "or" expr
   74     | expr . '#' expr

    "and"  shift, and go to state 93
    "mod"  shift, and go to state 94
    "or"   shift, and go to state 95
    ">="   shift, and go to state 96
    "<="   shift, and go to state 97
    "<>"   shift, and go to state 98
    '='    shift, and go to state 99
    '>'    shift, and go to state 100
    '<'    shift, and go to state 101
    '#'    shift, and go to state 102
    '+'    shift, and go to state 103
    '-'    shift, and go to state 104
    '*'    shift, and go to state 105
    '/'    shift, and go to state 106
    ','    shift, and go to state 137

    $default  reduce using rule 43 (expr_tail)

    expr_tail  go to state 153


State 148

   71 expr: "new" type '[' expr ']' .

    $default  reduce using rule 71 (expr)


State 149

   30 stmt: "for" simple_list ';' expr ';' simple_list . ':' stmt_list "end"

    ':'  shift, and go to state 154


State 150

   32 elsif_list: "elsif" expr . ':' stmt_list elsif_list
   55 expr: expr . '+' expr
   56     | expr . '-' expr
   57     | expr . '*' expr
   58     | expr . '/' expr
   59     | expr . "mod" expr
   60     | expr . '=' expr
   61     | expr . '>' expr
   62     | expr . '<' expr
   63     | expr . "<>" expr
   64     | expr . "<=" expr
   65     | expr . ">=" expr
   69     | expr . "and" expr
   70     | expr . "or" expr
   74     | expr . '#' expr

    "and"  shift, and go to state 93
    "mod"  shift, and go to state 94
    "or"   shift, and go to state 95
    ">="   shift, and go to state 96
    "<="   shift, and go to state 97
    "<>"   shift, and go to state 98
    '='    shift, and go to state 99
    '>'    shift, and go to state 100
    '<'    shift, and go to state 101
    '#'    shift, and go to state 102
    '+'    shift, and go to state 103
    '-'    shift, and go to state 104
    '*'    shift, and go to state 105
    '/'    shift, and go to state 106
    ':'    shift, and go to state 155


State 151

   34 else: "else" . ':' stmt_list

    ':'  shift, and go to state 156


State 152

   29 stmt: "if" expr ':' stmt_list elsif_list else . "end"

    "end"  shift, and go to state 157


State 153

   44 expr_tail: ',' expr expr_tail .

    $default  reduce using rule 44 (expr_tail)


State 154

   30 stmt: "for" simple_list ';' expr ';' simple_list ':' . stmt_list "end"

    "exit"         shift, and go to state 39
    "return"       shift, and go to state 40
    "skip"         shift, and go to state 41
    "for"          shift, and go to state 42
    "if"           shift, and go to state 43
    T_var          shift, and go to state 44
    T_constString  shift, and go to state 45

    stmt_list  go to state 158
    stmt       go to state 47
    simple     go to state 48
    call       go to state 49
    atom       go to state 50


State 155

   32 elsif_list: "elsif" expr ':' . stmt_list elsif_list

    "exit"         shift, and go to state 39
    "return"       shift, and go to state 40
    "skip"         shift, and go to state 41
    "for"          shift, and go to state 42
    "if"           shift, and go to state 43
    T_var          shift, and go to state 44
    T_constString  shift, and go to state 45

    stmt_list  go to state 159
    stmt       go to state 47
    simple     go to state 48
    call       go to state 49
    atom       go to state 50


State 156

   34 else: "else" ':' . stmt_list

    "exit"         shift, and go to state 39
    "return"       shift, and go to state 40
    "skip"         shift, and go to state 41
    "for"          shift, and go to state 42
    "if"           shift, and go to state 43
    T_var          shift, and go to state 44
    T_constString  shift, and go to state 45

    stmt_list  go to state 160
    stmt       go to state 47
    simple     go to state 48
    call       go to state 49
    atom       go to state 50


State 157

   29 stmt: "if" expr ':' stmt_list elsif_list else "end" .

    $default  reduce using rule 29 (stmt)


State 158

   30 stmt: "for" simple_list ';' expr ';' simple_list ':' stmt_list . "end"

    "end"  shift, and go to state 161


State 159

   32 elsif_list: "elsif" expr ':' stmt_list . elsif_list

    "elsif"  shift, and go to state 145

    $default  reduce using rule 31 (elsif_list)

    elsif_list  go to state 162


State 160

   34 else: "else" ':' stmt_list .

    $default  reduce using rule 34 (else)


State 161

   30 stmt: "for" simple_list ';' expr ';' simple_list ':' stmt_list "end" .

    $default  reduce using rule 30 (stmt)


State 162

   32 elsif_list: "elsif" expr ':' stmt_list elsif_list .

    $default  reduce using rule 32 (elsif_list)
